{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\social\\\\social_network\\\\components\\\\Post\\\\CreatePost.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useRef } from \"react\";\nimport { Form, Button, Image, Divider, Message, Icon } from \"semantic-ui-react\";\nimport uploadPic from \"../../utils/uploadPicToCloudinary\";\nimport { submitNewPost } from \"../../utils/postActions\";\nimport CropImageModal from \"./CropImageModal\";\n\nfunction CreatePost({\n  user,\n  setPosts\n}) {\n  const {\n    0: newPost,\n    1: setNewPost\n  } = useState({\n    text: \"\",\n    location: \"\"\n  });\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const inputRef = useRef();\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: highlighted,\n    1: setHighlighted\n  } = useState(false);\n  const {\n    0: media,\n    1: setMedia\n  } = useState(null);\n  const {\n    0: mediaPreview,\n    1: setMediaPreview\n  } = useState(null);\n  const {\n    0: showModal,\n    1: setShowModal\n  } = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      files\n    } = e.target;\n\n    if (name === \"media\") {\n      if (files && files.length > 0) {\n        setMedia(files[0]);\n        setMediaPreview(URL.createObjectURL(files[0]));\n      }\n    }\n\n    setNewPost(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      [name]: value\n    }));\n  };\n\n  const addStyles = () => ({\n    textAlign: \"center\",\n    height: \"150px\",\n    width: \"150px\",\n    border: \"dotted\",\n    paddingTop: media === null && \"60px\",\n    cursor: \"pointer\",\n    borderColor: highlighted ? \"green\" : \"black\"\n  });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    let picUrl;\n\n    if (media !== null) {\n      picUrl = await uploadPic(media);\n\n      if (!picUrl) {\n        setLoading(false);\n        return setError(\"Error Uploading Image\");\n      }\n    }\n\n    await submitNewPost(newPost.text, newPost.location, picUrl, setPosts, setNewPost, setError);\n    setMedia(null);\n    mediaPreview && URL.revokeObjectURL(mediaPreview);\n    setTimeout(() => setMediaPreview(null), 3000);\n    setLoading(false);\n  };\n\n  return __jsx(React.Fragment, null, showModal && __jsx(CropImageModal, {\n    mediaPreview: mediaPreview,\n    setMedia: setMedia,\n    showModal: showModal,\n    setShowModal: setShowModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), __jsx(Form, {\n    error: error !== null,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, __jsx(Message, {\n    error: true,\n    onDismiss: () => setError(null),\n    content: error,\n    header: \"Oops!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, __jsx(Image, {\n    src: user.profilePicUrl,\n    circular: true,\n    avatar: true,\n    inline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), __jsx(Form.TextArea, {\n    placeholder: \"Whats Happening\",\n    name: \"text\",\n    value: newPost.text,\n    onChange: handleChange,\n    rows: 4,\n    width: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Input, {\n    value: newPost.location,\n    name: \"location\",\n    onChange: handleChange,\n    label: \"Add Location\",\n    icon: \"map marker alternate\",\n    placeholder: \"Want to add Location?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }), __jsx(\"input\", {\n    ref: inputRef,\n    onChange: handleChange,\n    name: \"media\",\n    style: {\n      display: \"none\"\n    },\n    type: \"file\",\n    accept: \"image/*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    onClick: () => inputRef.current.click(),\n    style: addStyles(),\n    onDragOver: e => {\n      e.preventDefault();\n      setHighlighted(true);\n    },\n    onDragLeave: e => {\n      e.preventDefault();\n      setHighlighted(false);\n    },\n    onDrop: e => {\n      e.preventDefault();\n      setHighlighted(true);\n      const droppedFile = Array.from(e.dataTransfer.files);\n      setMedia(droppedFile[0]);\n      setMediaPreview(URL.createObjectURL(droppedFile[0]));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, media === null ? __jsx(Icon, {\n    name: \"plus\",\n    size: \"big\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }) : __jsx(Image, {\n    style: {\n      height: \"150px\",\n      width: \"150px\"\n    },\n    src: mediaPreview,\n    alt: \"PostImage\",\n    centered: true,\n    size: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  })), mediaPreview !== null && __jsx(React.Fragment, null, __jsx(Divider, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    content: \"Crop Image\",\n    type: \"button\",\n    primary: true,\n    circular: true,\n    onClick: () => setShowModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  })), __jsx(Divider, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    circular: true,\n    disabled: newPost.text === \"\" || loading,\n    content: __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 20\n      }\n    }, \"Post\"),\n    style: {\n      backgroundColor: \"#1DA1F2\",\n      color: \"white\"\n    },\n    icon: \"send\",\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  })), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default CreatePost;","map":{"version":3,"sources":["C:/Users/Admin/Documents/social/social_network/components/Post/CreatePost.js"],"names":["React","useState","useRef","Form","Button","Image","Divider","Message","Icon","uploadPic","submitNewPost","CropImageModal","CreatePost","user","setPosts","newPost","setNewPost","text","location","loading","setLoading","inputRef","error","setError","highlighted","setHighlighted","media","setMedia","mediaPreview","setMediaPreview","showModal","setShowModal","handleChange","e","name","value","files","target","length","URL","createObjectURL","prev","addStyles","textAlign","height","width","border","paddingTop","cursor","borderColor","handleSubmit","preventDefault","picUrl","revokeObjectURL","setTimeout","profilePicUrl","display","current","click","droppedFile","Array","from","dataTransfer","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { Form, Button, Image, Divider, Message, Icon } from \"semantic-ui-react\";\nimport uploadPic from \"../../utils/uploadPicToCloudinary\";\nimport { submitNewPost } from \"../../utils/postActions\";\nimport CropImageModal from \"./CropImageModal\";\n\nfunction CreatePost({ user, setPosts }) {\n  const [newPost, setNewPost] = useState({ text: \"\", location: \"\" });\n  const [loading, setLoading] = useState(false);\n  const inputRef = useRef();\n\n  const [error, setError] = useState(null);\n  const [highlighted, setHighlighted] = useState(false);\n\n  const [media, setMedia] = useState(null);\n  const [mediaPreview, setMediaPreview] = useState(null);\n\n  const [showModal, setShowModal] = useState(false);\n\n  const handleChange = e => {\n    const { name, value, files } = e.target;\n\n    if (name === \"media\") {\n      if (files && files.length > 0) {\n        setMedia(files[0]);\n        setMediaPreview(URL.createObjectURL(files[0]));\n      }\n    }\n\n    setNewPost(prev => ({ ...prev, [name]: value }));\n  };\n\n  const addStyles = () => ({\n    textAlign: \"center\",\n    height: \"150px\",\n    width: \"150px\",\n    border: \"dotted\",\n    paddingTop: media === null && \"60px\",\n    cursor: \"pointer\",\n    borderColor: highlighted ? \"green\" : \"black\"\n  });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    let picUrl;\n\n    if (media !== null) {\n      picUrl = await uploadPic(media);\n      if (!picUrl) {\n        setLoading(false);\n        return setError(\"Error Uploading Image\");\n      }\n    }\n\n    await submitNewPost(\n      newPost.text,\n      newPost.location,\n      picUrl,\n      setPosts,\n      setNewPost,\n      setError\n    );\n\n    setMedia(null);\n    mediaPreview && URL.revokeObjectURL(mediaPreview);\n    setTimeout(() => setMediaPreview(null), 3000);\n    setLoading(false);\n  };\n\n  return (\n    <>\n      {showModal && (\n        <CropImageModal\n          mediaPreview={mediaPreview}\n          setMedia={setMedia}\n          showModal={showModal}\n          setShowModal={setShowModal}\n        />\n      )}\n\n      <Form error={error !== null} onSubmit={handleSubmit}>\n        <Message\n          error\n          onDismiss={() => setError(null)}\n          content={error}\n          header=\"Oops!\"\n        />\n\n        <Form.Group>\n          <Image src={user.profilePicUrl} circular avatar inline />\n          <Form.TextArea\n            placeholder=\"Whats Happening\"\n            name=\"text\"\n            value={newPost.text}\n            onChange={handleChange}\n            rows={4}\n            width={14}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Input\n            value={newPost.location}\n            name=\"location\"\n            onChange={handleChange}\n            label=\"Add Location\"\n            icon=\"map marker alternate\"\n            placeholder=\"Want to add Location?\"\n          />\n\n          <input\n            ref={inputRef}\n            onChange={handleChange}\n            name=\"media\"\n            style={{ display: \"none\" }}\n            type=\"file\"\n            accept=\"image/*\"\n          />\n        </Form.Group>\n\n        <div\n          onClick={() => inputRef.current.click()}\n          style={addStyles()}\n          onDragOver={e => {\n            e.preventDefault();\n            setHighlighted(true);\n          }}\n          onDragLeave={e => {\n            e.preventDefault();\n            setHighlighted(false);\n          }}\n          onDrop={e => {\n            e.preventDefault();\n            setHighlighted(true);\n\n            const droppedFile = Array.from(e.dataTransfer.files);\n\n            setMedia(droppedFile[0]);\n            setMediaPreview(URL.createObjectURL(droppedFile[0]));\n          }}\n        >\n          {media === null ? (\n            <Icon name=\"plus\" size=\"big\" />\n          ) : (\n            <Image\n              style={{ height: \"150px\", width: \"150px\" }}\n              src={mediaPreview}\n              alt=\"PostImage\"\n              centered\n              size=\"medium\"\n            />\n          )}\n        </div>\n\n        {mediaPreview !== null && (\n          <>\n            <Divider hidden />\n\n            <Button\n              content=\"Crop Image\"\n              type=\"button\"\n              primary\n              circular\n              onClick={() => setShowModal(true)}\n            />\n          </>\n        )}\n\n        <Divider hidden />\n\n        <Button\n          circular\n          disabled={newPost.text === \"\" || loading}\n          content={<strong>Post</strong>}\n          style={{ backgroundColor: \"#1DA1F2\", color: \"white\" }}\n          icon=\"send\"\n          loading={loading}\n        />\n      </Form>\n      <Divider />\n    </>\n  );\n}\n\nexport default CreatePost;\n"]},"metadata":{},"sourceType":"module"}