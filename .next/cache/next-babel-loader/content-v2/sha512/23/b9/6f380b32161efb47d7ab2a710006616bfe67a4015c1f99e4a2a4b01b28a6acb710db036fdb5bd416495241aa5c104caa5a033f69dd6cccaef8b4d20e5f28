{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Admin/Documents/social/social_network/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:/Users/Admin/Documents/social/social_network/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Admin/Documents/social/social_network/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\social\\\\social_network\\\\pages\\\\messages.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport baseUrl from \"../utils/baseUrl\";\nimport { parseCookies } from \"nookies\";\nimport { useRouter } from \"next/router\";\nimport { Segment, Header, Divider, Comment, Grid } from \"semantic-ui-react\";\nimport Chat from \"../components/Chats/Chat\";\nimport ChatListSearch from \"../components/Chats/ChatListSearch\";\nimport { NoMessages } from \"../components/Layout/NoData\";\nimport Banner from \"../components/Messages/Banner\";\nimport MessageInputField from \"../components/Messages/MessageInputField\";\nimport Message from \"../components/Messages/Message\";\nimport getUserInfo from \"../utils/getUserInfo\";\nimport newMsgSound from \"../utils/newMsgSound\";\nimport cookie from \"js-cookie\";\n\nvar scrollDivToBottom = function scrollDivToBottom(divRef) {\n  return divRef.current !== null && divRef.current.scrollIntoView({\n    behaviour: \"smooth\"\n  });\n};\n\nfunction Messages(_ref) {\n  _s();\n\n  var _this = this;\n\n  var chatsData = _ref.chatsData,\n      user = _ref.user;\n\n  var _useState = useState(chatsData),\n      chats = _useState[0],\n      setChats = _useState[1];\n\n  var router = useRouter();\n  var socket = useRef();\n\n  var _useState2 = useState([]),\n      connectedUsers = _useState2[0],\n      setConnectedUsers = _useState2[1];\n\n  var _useState3 = useState([]),\n      messages = _useState3[0],\n      setMessages = _useState3[1];\n\n  var _useState4 = useState({\n    name: \"\",\n    profilePicUrl: \"\"\n  }),\n      bannerData = _useState4[0],\n      setBannerData = _useState4[1];\n\n  var divRef = useRef(); // This ref is for persisting the state of query string in url throughout re-renders. This ref is the value of query string inside url\n\n  var openChatId = useRef(\"\"); //CONNECTION useEffect\n\n  useEffect(function () {\n    if (!socket.current) {\n      socket.current = io(baseUrl);\n    }\n\n    if (socket.current) {\n      socket.current.emit(\"join\", {\n        userId: user._id\n      });\n      socket.current.on(\"connectedUsers\", function (_ref2) {\n        var users = _ref2.users;\n        users.length > 0 && setConnectedUsers(users);\n      });\n\n      if (chats.length > 0 && !router.query.message) {\n        router.push(\"/messages?message=\".concat(chats[0].messagesWith), undefined, {\n          shallow: true\n        });\n      }\n    }\n\n    return function () {\n      if (socket.current) {\n        socket.current.emit(\"disconnect\");\n        socket.current.off();\n      }\n    };\n  }, []); // LOAD MESSAGES useEffect\n\n  useEffect(function () {\n    var loadMessages = function loadMessages() {\n      socket.current.emit(\"loadMessages\", {\n        userId: user._id,\n        messagesWith: router.query.message\n      });\n      socket.current.on(\"messagesLoaded\", /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref3) {\n          var chat;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  chat = _ref3.chat;\n                  setMessages(chat.messages);\n                  setBannerData({\n                    name: chat.messagesWith.name,\n                    profilePicUrl: chat.messagesWith.profilePicUrl\n                  });\n                  openChatId.current = chat.messagesWith._id;\n                  divRef.current && scrollDivToBottom(divRef);\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n      socket.current.on(\"noChatFound\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _yield$getUserInfo, name, profilePicUrl;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return getUserInfo(router.query.message);\n\n              case 2:\n                _yield$getUserInfo = _context2.sent;\n                name = _yield$getUserInfo.name;\n                profilePicUrl = _yield$getUserInfo.profilePicUrl;\n                setBannerData({\n                  name: name,\n                  profilePicUrl: profilePicUrl\n                });\n                setMessages([]);\n                openChatId.current = router.query.message;\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      })));\n    };\n\n    if (socket.current && router.query.message) loadMessages();\n  }, [router.query.message]);\n\n  var sendMsg = function sendMsg(msg) {\n    if (socket.current) {\n      socket.current.emit(\"sendNewMsg\", {\n        userId: user._id,\n        msgSendToUserId: openChatId.current,\n        msg: msg\n      });\n    }\n  }; // Confirming msg is sent and receving the messages useEffect\n\n\n  useEffect(function () {\n    if (socket.current) {\n      socket.current.on(\"msgSent\", function (_ref6) {\n        var newMsg = _ref6.newMsg;\n\n        if (newMsg.receiver === openChatId.current) {\n          setMessages(function (prev) {\n            return [].concat(_toConsumableArray(prev), [newMsg]);\n          });\n          setChats(function (prev) {\n            var previousChat = prev.find(function (chat) {\n              return chat.messagesWith === newMsg.receiver;\n            });\n            previousChat.lastMessage = newMsg.msg;\n            previousChat.date = newMsg.date;\n            return _toConsumableArray(prev);\n          });\n        }\n      });\n      socket.current.on(\"newMsgReceived\", /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref7) {\n          var newMsg, senderName, ifPreviouslyMessaged, _yield$getUserInfo2, name, profilePicUrl, newChat;\n\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  newMsg = _ref7.newMsg;\n\n                  if (!(newMsg.sender === openChatId.current)) {\n                    _context3.next = 6;\n                    break;\n                  }\n\n                  setMessages(function (prev) {\n                    return [].concat(_toConsumableArray(prev), [newMsg]);\n                  });\n                  setChats(function (prev) {\n                    var previousChat = prev.find(function (chat) {\n                      return chat.messagesWith === newMsg.sender;\n                    });\n                    previousChat.lastMessage = newMsg.msg;\n                    previousChat.date = newMsg.date;\n                    senderName = previousChat.name;\n                    return _toConsumableArray(prev);\n                  });\n                  _context3.next = 19;\n                  break;\n\n                case 6:\n                  ifPreviouslyMessaged = chats.filter(function (chat) {\n                    return chat.messagesWith === newMsg.sender;\n                  }).length > 0;\n\n                  if (!ifPreviouslyMessaged) {\n                    _context3.next = 11;\n                    break;\n                  }\n\n                  setChats(function (prev) {\n                    var previousChat = prev.find(function (chat) {\n                      return chat.messagesWith === newMsg.sender;\n                    });\n                    previousChat.lastMessage = newMsg.msg;\n                    previousChat.date = newMsg.date;\n                    senderName = previousChat.name;\n                    return [previousChat].concat(_toConsumableArray(prev.filter(function (chat) {\n                      return chat.messagesWith !== newMsg.sender;\n                    })));\n                  });\n                  _context3.next = 19;\n                  break;\n\n                case 11:\n                  _context3.next = 13;\n                  return getUserInfo(newMsg.sender);\n\n                case 13:\n                  _yield$getUserInfo2 = _context3.sent;\n                  name = _yield$getUserInfo2.name;\n                  profilePicUrl = _yield$getUserInfo2.profilePicUrl;\n                  senderName = name;\n                  newChat = {\n                    messagesWith: newMsg.sender,\n                    name: name,\n                    profilePicUrl: profilePicUrl,\n                    lastMessage: newMsg.msg,\n                    date: newMsg.date\n                  };\n                  setChats(function (prev) {\n                    return [newChat].concat(_toConsumableArray(prev));\n                  });\n\n                case 19:\n                  newMsgSound(senderName);\n\n                case 20:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x2) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n    }\n  }, []);\n  useEffect(function () {\n    messages.length > 0 && scrollDivToBottom(divRef);\n  }, [messages]);\n\n  var deleteMsg = function deleteMsg(messageId) {\n    if (socket.current) {\n      socket.current.emit(\"deleteMsg\", {\n        userId: user._id,\n        messagesWith: openChatId.current,\n        messageId: messageId\n      });\n      socket.current.on(\"msgDeleted\", function () {\n        setMessages(function (prev) {\n          return prev.filter(function (message) {\n            return message._id !== messageId;\n          });\n        });\n      });\n    }\n  };\n\n  var deleteChat = /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(messagesWith) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return axios[\"delete\"](\"\".concat(baseUrl, \"/api/chats/\").concat(messagesWith), {\n                headers: {\n                  Authorization: cookie.get(\"token\")\n                }\n              });\n\n            case 3:\n              setChats(function (prev) {\n                return prev.filter(function (chat) {\n                  return chat.messagesWith !== messagesWith;\n                });\n              });\n              router.push(\"/messages\", undefined, {\n                shallow: true\n              });\n              _context4.next = 10;\n              break;\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n              alert(\"Error deleting chat\");\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 7]]);\n    }));\n\n    return function deleteChat(_x3) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Segment, {\n    padded: true,\n    basic: true,\n    size: \"large\",\n    style: {\n      marginTop: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }\n  }, __jsx(Header, {\n    icon: \"home\",\n    content: \"Go Back!\",\n    onClick: function onClick() {\n      return router.push(\"/\");\n    },\n    style: {\n      cursor: \"pointer\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }), __jsx(Divider, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    style: {\n      marginBottom: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, __jsx(ChatListSearch, {\n    chats: chats,\n    setChats: setChats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  })), chats.length > 0 ? __jsx(React.Fragment, null, __jsx(Grid, {\n    stackable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, __jsx(Grid.Column, {\n    width: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }, __jsx(Comment.Group, {\n    size: \"big\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, __jsx(Segment, {\n    raised: true,\n    style: {\n      overflow: \"auto\",\n      maxHeight: \"32rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 19\n    }\n  }, chats.map(function (chat, i) {\n    return __jsx(Chat, {\n      key: i,\n      chat: chat,\n      connectedUsers: connectedUsers,\n      deleteChat: deleteChat,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 23\n      }\n    });\n  })))), __jsx(Grid.Column, {\n    width: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 15\n    }\n  }, router.query.message && __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      overflow: \"auto\",\n      overflowX: \"hidden\",\n      maxHeight: \"35rem\",\n      height: \"35rem\",\n      backgroundColor: \"whitesmoke\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    style: {\n      position: \"sticky\",\n      top: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 23\n    }\n  }, __jsx(Banner, {\n    bannerData: bannerData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 25\n    }\n  })), messages.length > 0 && messages.map(function (message, i) {\n    return __jsx(Message, {\n      divRef: divRef,\n      key: i,\n      bannerProfilePic: bannerData.profilePicUrl,\n      message: message,\n      user: user,\n      deleteMsg: deleteMsg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 27\n      }\n    });\n  })), __jsx(MessageInputField, {\n    sendMsg: sendMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 21\n    }\n  }))))) : __jsx(NoMessages, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 11\n    }\n  })));\n}\n\n_s(Messages, \"I+MaOjZv2XN4Zl1Fbw4NWZxO6uk=\", false, function () {\n  return [useRouter];\n});\n\n_c = Messages;\n\nMessages.getInitialProps = /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(ctx) {\n    var _parseCookies, token, res;\n\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _parseCookies = parseCookies(ctx), token = _parseCookies.token;\n            _context5.next = 4;\n            return axios.get(\"\".concat(baseUrl, \"/api/chats\"), {\n              headers: {\n                Authorization: token\n              }\n            });\n\n          case 4:\n            res = _context5.sent;\n            return _context5.abrupt(\"return\", {\n              chatsData: res.data\n            });\n\n          case 8:\n            _context5.prev = 8;\n            _context5.t0 = _context5[\"catch\"](0);\n            return _context5.abrupt(\"return\", {\n              errorLoading: true\n            });\n\n          case 11:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 8]]);\n  }));\n\n  return function (_x4) {\n    return _ref10.apply(this, arguments);\n  };\n}();\n\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/social/social_network/pages/messages.js"],"names":["React","useEffect","useRef","useState","io","axios","baseUrl","parseCookies","useRouter","Segment","Header","Divider","Comment","Grid","Chat","ChatListSearch","NoMessages","Banner","MessageInputField","Message","getUserInfo","newMsgSound","cookie","scrollDivToBottom","divRef","current","scrollIntoView","behaviour","Messages","chatsData","user","chats","setChats","router","socket","connectedUsers","setConnectedUsers","messages","setMessages","name","profilePicUrl","bannerData","setBannerData","openChatId","emit","userId","_id","on","users","length","query","message","push","messagesWith","undefined","shallow","off","loadMessages","chat","sendMsg","msg","msgSendToUserId","newMsg","receiver","prev","previousChat","find","lastMessage","date","sender","senderName","ifPreviouslyMessaged","filter","newChat","deleteMsg","messageId","deleteChat","headers","Authorization","get","alert","marginTop","cursor","marginBottom","overflow","maxHeight","map","i","overflowX","height","backgroundColor","position","top","getInitialProps","ctx","token","res","data","errorLoading"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport baseUrl from \"../utils/baseUrl\";\nimport { parseCookies } from \"nookies\";\nimport { useRouter } from \"next/router\";\nimport { Segment, Header, Divider, Comment, Grid } from \"semantic-ui-react\";\nimport Chat from \"../components/Chats/Chat\";\nimport ChatListSearch from \"../components/Chats/ChatListSearch\";\nimport { NoMessages } from \"../components/Layout/NoData\";\nimport Banner from \"../components/Messages/Banner\";\nimport MessageInputField from \"../components/Messages/MessageInputField\";\nimport Message from \"../components/Messages/Message\";\nimport getUserInfo from \"../utils/getUserInfo\";\nimport newMsgSound from \"../utils/newMsgSound\";\nimport cookie from \"js-cookie\";\n\nconst scrollDivToBottom = divRef =>\n  divRef.current !== null && divRef.current.scrollIntoView({ behaviour: \"smooth\" });\n\nfunction Messages({ chatsData, user }) {\n  const [chats, setChats] = useState(chatsData);\n  const router = useRouter();\n\n  const socket = useRef();\n  const [connectedUsers, setConnectedUsers] = useState([]);\n\n  const [messages, setMessages] = useState([]);\n  const [bannerData, setBannerData] = useState({ name: \"\", profilePicUrl: \"\" });\n\n  const divRef = useRef();\n\n  // This ref is for persisting the state of query string in url throughout re-renders. This ref is the value of query string inside url\n  const openChatId = useRef(\"\");\n\n  //CONNECTION useEffect\n  useEffect(() => {\n    if (!socket.current) {\n      socket.current = io(baseUrl);\n    }\n\n    if (socket.current) {\n      socket.current.emit(\"join\", { userId: user._id });\n\n      socket.current.on(\"connectedUsers\", ({ users }) => {\n        users.length > 0 && setConnectedUsers(users);\n      });\n\n      if (chats.length > 0 && !router.query.message) {\n        router.push(`/messages?message=${chats[0].messagesWith}`, undefined, {\n          shallow: true\n        });\n      }\n    }\n\n    return () => {\n      if (socket.current) {\n        socket.current.emit(\"disconnect\");\n        socket.current.off();\n      }\n    };\n  }, []);\n\n  // LOAD MESSAGES useEffect\n  useEffect(() => {\n    const loadMessages = () => {\n      socket.current.emit(\"loadMessages\", {\n        userId: user._id,\n        messagesWith: router.query.message\n      });\n\n      socket.current.on(\"messagesLoaded\", async ({ chat }) => {\n        setMessages(chat.messages);\n        setBannerData({\n          name: chat.messagesWith.name,\n          profilePicUrl: chat.messagesWith.profilePicUrl\n        });\n\n        openChatId.current = chat.messagesWith._id;\n        divRef.current && scrollDivToBottom(divRef);\n      });\n\n      socket.current.on(\"noChatFound\", async () => {\n        const { name, profilePicUrl } = await getUserInfo(router.query.message);\n\n        setBannerData({ name, profilePicUrl });\n        setMessages([]);\n\n        openChatId.current = router.query.message;\n      });\n    };\n\n    if (socket.current && router.query.message) loadMessages();\n  }, [router.query.message]);\n\n  const sendMsg = msg => {\n    if (socket.current) {\n      socket.current.emit(\"sendNewMsg\", {\n        userId: user._id,\n        msgSendToUserId: openChatId.current,\n        msg\n      });\n    }\n  };\n\n  // Confirming msg is sent and receving the messages useEffect\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on(\"msgSent\", ({ newMsg }) => {\n        if (newMsg.receiver === openChatId.current) {\n          setMessages(prev => [...prev, newMsg]);\n\n          setChats(prev => {\n            const previousChat = prev.find(chat => chat.messagesWith === newMsg.receiver);\n            previousChat.lastMessage = newMsg.msg;\n            previousChat.date = newMsg.date;\n\n            return [...prev];\n          });\n        }\n      });\n\n      socket.current.on(\"newMsgReceived\", async ({ newMsg }) => {\n        let senderName;\n\n        // WHEN CHAT WITH SENDER IS CURRENTLY OPENED INSIDE YOUR BROWSER\n        if (newMsg.sender === openChatId.current) {\n          setMessages(prev => [...prev, newMsg]);\n\n          setChats(prev => {\n            const previousChat = prev.find(chat => chat.messagesWith === newMsg.sender);\n            previousChat.lastMessage = newMsg.msg;\n            previousChat.date = newMsg.date;\n\n            senderName = previousChat.name;\n\n            return [...prev];\n          });\n        }\n        //\n        else {\n          const ifPreviouslyMessaged =\n            chats.filter(chat => chat.messagesWith === newMsg.sender).length > 0;\n\n          if (ifPreviouslyMessaged) {\n            setChats(prev => {\n              const previousChat = prev.find(chat => chat.messagesWith === newMsg.sender);\n              previousChat.lastMessage = newMsg.msg;\n              previousChat.date = newMsg.date;\n\n              senderName = previousChat.name;\n\n              return [\n                previousChat,\n                ...prev.filter(chat => chat.messagesWith !== newMsg.sender)\n              ];\n            });\n          }\n\n          //IF NO PREVIOUS CHAT WITH THE SENDER\n          else {\n            const { name, profilePicUrl } = await getUserInfo(newMsg.sender);\n            senderName = name;\n\n            const newChat = {\n              messagesWith: newMsg.sender,\n              name,\n              profilePicUrl,\n              lastMessage: newMsg.msg,\n              date: newMsg.date\n            };\n            setChats(prev => [newChat, ...prev]);\n          }\n        }\n\n        newMsgSound(senderName);\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    messages.length > 0 && scrollDivToBottom(divRef);\n  }, [messages]);\n\n  const deleteMsg = messageId => {\n    if (socket.current) {\n      socket.current.emit(\"deleteMsg\", {\n        userId: user._id,\n        messagesWith: openChatId.current,\n        messageId\n      });\n\n      socket.current.on(\"msgDeleted\", () => {\n        setMessages(prev => prev.filter(message => message._id !== messageId));\n      });\n    }\n  };\n\n  const deleteChat = async messagesWith => {\n    try {\n      await axios.delete(`${baseUrl}/api/chats/${messagesWith}`, {\n        headers: { Authorization: cookie.get(\"token\") }\n      });\n\n      setChats(prev => prev.filter(chat => chat.messagesWith !== messagesWith));\n      router.push(\"/messages\", undefined, { shallow: true });\n    } catch (error) {\n      alert(\"Error deleting chat\");\n    }\n  };\n\n  return (\n    <>\n      <Segment padded basic size=\"large\" style={{ marginTop: \"5px\" }}>\n        <Header\n          icon=\"home\"\n          content=\"Go Back!\"\n          onClick={() => router.push(\"/\")}\n          style={{ cursor: \"pointer\" }}\n        />\n        <Divider hidden />\n\n        <div style={{ marginBottom: \"10px\" }}>\n          <ChatListSearch chats={chats} setChats={setChats} />\n        </div>\n\n        {chats.length > 0 ? (\n          <>\n            <Grid stackable>\n              <Grid.Column width={4}>\n                <Comment.Group size=\"big\">\n                  <Segment raised style={{ overflow: \"auto\", maxHeight: \"32rem\" }}>\n                    {chats.map((chat, i) => (\n                      <Chat\n                        key={i}\n                        chat={chat}\n                        connectedUsers={connectedUsers}\n                        deleteChat={deleteChat}\n                      />\n                    ))}\n                  </Segment>\n                </Comment.Group>\n              </Grid.Column>\n\n              <Grid.Column width={12}>\n                {router.query.message && (\n                  <>\n                    <div\n                      style={{\n                        overflow: \"auto\",\n                        overflowX: \"hidden\",\n                        maxHeight: \"35rem\",\n                        height: \"35rem\",\n                        backgroundColor: \"whitesmoke\"\n                      }}\n                    >\n                      <div style={{ position: \"sticky\", top: \"0\" }}>\n                        <Banner bannerData={bannerData} />\n                      </div>\n\n                      {messages.length > 0 &&\n                        messages.map((message, i) => (\n                          <Message\n                            divRef={divRef}\n                            key={i}\n                            bannerProfilePic={bannerData.profilePicUrl}\n                            message={message}\n                            user={user}\n                            deleteMsg={deleteMsg}\n                          />\n                        ))}\n                    </div>\n\n                    <MessageInputField sendMsg={sendMsg} />\n                  </>\n                )}\n              </Grid.Column>\n            </Grid>\n          </>\n        ) : (\n          <NoMessages />\n        )}\n      </Segment>\n    </>\n  );\n}\n\nMessages.getInitialProps = async ctx => {\n  try {\n    const { token } = parseCookies(ctx);\n\n    const res = await axios.get(`${baseUrl}/api/chats`, {\n      headers: { Authorization: token }\n    });\n\n    return { chatsData: res.data };\n  } catch (error) {\n    return { errorLoading: true };\n  }\n};\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}