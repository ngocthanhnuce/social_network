{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\social\\\\social_network\\\\components\\\\Post\\\\CardPost.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from \"react\";\nimport { Card, Icon, Image, Divider, Segment, Button, Popup, Header, Modal } from \"semantic-ui-react\";\nimport PostComments from \"./PostComments\";\nimport CommentInputField from \"./CommentInputField\";\nimport calculateTime from \"../../utils/calculateTime\";\nimport Link from \"next/link\";\nimport { deletePost, likePost } from \"../../utils/postActions\";\nimport LikesList from \"./LikesList\";\nimport ImageModal from \"./ImageModal\";\nimport NoImageModal from \"./NoImageModal\";\n\nfunction CardPost({\n  post,\n  user,\n  setPosts,\n  setShowToastr,\n  socket\n}) {\n  const {\n    0: likes,\n    1: setLikes\n  } = useState(post.likes);\n  const isLiked = likes.length > 0 && likes.filter(like => like.user === user._id).length > 0;\n  const {\n    0: comments,\n    1: setComments\n  } = useState(post.comments);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: showModal,\n    1: setShowModal\n  } = useState(false);\n\n  const addPropsToModal = () => ({\n    post,\n    user,\n    setLikes,\n    likes,\n    isLiked,\n    comments,\n    setComments\n  });\n\n  return __jsx(React.Fragment, null, showModal && __jsx(Modal, {\n    open: showModal,\n    closeIcon: true,\n    closeOnDimmerClick: true,\n    onClose: () => setShowModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, post.picUrl ? __jsx(ImageModal, _extends({}, addPropsToModal(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  })) : __jsx(NoImageModal, _extends({}, addPropsToModal(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  })))), __jsx(Segment, {\n    basic: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(Card, {\n    color: \"teal\",\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, post.picUrl && __jsx(Image, {\n    src: post.picUrl,\n    style: {\n      cursor: \"pointer\"\n    },\n    floated: \"left\",\n    wrapped: true,\n    ui: false,\n    alt: \"PostImage\",\n    onClick: () => setShowModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), __jsx(Card.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, __jsx(Image, {\n    floated: \"left\",\n    src: post.user.profilePicUrl,\n    avatar: true,\n    circular: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), (user.role === \"root\" || post.user._id === user._id) && __jsx(React.Fragment, null, __jsx(Popup, {\n    on: \"click\",\n    position: \"top right\",\n    trigger: __jsx(Image, {\n      src: \"/deleteIcon.svg\",\n      style: {\n        cursor: \"pointer\"\n      },\n      size: \"mini\",\n      floated: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, __jsx(Header, {\n    as: \"h4\",\n    content: \"Are you sure?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  }, \"This action is irreversible!\"), __jsx(Button, {\n    color: \"red\",\n    icon: \"trash\",\n    content: \"Delete\",\n    onClick: () => deletePost(post._id, setPosts, setShowToastr),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }))), __jsx(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: `/${post.user.username}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, post.user.name))), __jsx(Card.Meta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, calculateTime(post.createdAt)), post.location && __jsx(Card.Meta, {\n    content: post.location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 31\n    }\n  }), __jsx(Card.Description, {\n    style: {\n      fontSize: \"17px\",\n      letterSpacing: \"0.1px\",\n      wordSpacing: \"0.35px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, post.text)), __jsx(Card.Content, {\n    extra: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    name: isLiked ? \"heart\" : \"heart outline\",\n    color: \"red\",\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: () => {\n      if (socket.current) {\n        socket.current.emit(\"likePost\", {\n          postId: post._id,\n          userId: user._id,\n          like: isLiked ? false : true\n        });\n        socket.current.on(\"postLiked\", () => {\n          if (isLiked) {\n            setLikes(prev => prev.filter(like => like.user !== user._id));\n          } //\n          else {\n              setLikes(prev => [...prev, {\n                user: user._id\n              }]);\n            }\n        });\n      } else {\n        likePost(post._id, user._id, setLikes, isLiked ? false : true);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }), __jsx(LikesList, {\n    postId: post._id,\n    trigger: likes.length > 0 && __jsx(\"span\", {\n      className: \"spanLikesList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 19\n      }\n    }, `${likes.length} ${likes.length === 1 ? \"like\" : \"likes\"}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }), __jsx(Icon, {\n    name: \"comment outline\",\n    style: {\n      marginLeft: \"7px\"\n    },\n    color: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }), comments.length > 0 && comments.map((comment, i) => i < 3 && __jsx(PostComments, {\n    key: comment._id,\n    comment: comment,\n    postId: post._id,\n    user: user,\n    setComments: setComments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  })), comments.length > 3 && __jsx(Button, {\n    content: \"View More\",\n    color: \"teal\",\n    basic: true,\n    circular: true,\n    onClick: () => setShowModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }), __jsx(Divider, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }), __jsx(CommentInputField, {\n    user: user,\n    postId: post._id,\n    setComments: setComments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  })))), __jsx(Divider, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default CardPost;","map":{"version":3,"sources":["C:/Users/Admin/Documents/social/social_network/components/Post/CardPost.js"],"names":["React","useState","Card","Icon","Image","Divider","Segment","Button","Popup","Header","Modal","PostComments","CommentInputField","calculateTime","Link","deletePost","likePost","LikesList","ImageModal","NoImageModal","CardPost","post","user","setPosts","setShowToastr","socket","likes","setLikes","isLiked","length","filter","like","_id","comments","setComments","error","setError","showModal","setShowModal","addPropsToModal","picUrl","cursor","profilePicUrl","role","username","name","createdAt","location","fontSize","letterSpacing","wordSpacing","text","current","emit","postId","userId","on","prev","marginLeft","map","comment","i"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Card,\n  Icon,\n  Image,\n  Divider,\n  Segment,\n  Button,\n  Popup,\n  Header,\n  Modal\n} from \"semantic-ui-react\";\nimport PostComments from \"./PostComments\";\nimport CommentInputField from \"./CommentInputField\";\nimport calculateTime from \"../../utils/calculateTime\";\nimport Link from \"next/link\";\nimport { deletePost, likePost } from \"../../utils/postActions\";\nimport LikesList from \"./LikesList\";\nimport ImageModal from \"./ImageModal\";\nimport NoImageModal from \"./NoImageModal\";\n\nfunction CardPost({ post, user, setPosts, setShowToastr, socket }) {\n  const [likes, setLikes] = useState(post.likes);\n\n  const isLiked =\n    likes.length > 0 && likes.filter(like => like.user === user._id).length > 0;\n\n  const [comments, setComments] = useState(post.comments);\n\n  const [error, setError] = useState(null);\n\n  const [showModal, setShowModal] = useState(false);\n\n  const addPropsToModal = () => ({\n    post,\n    user,\n    setLikes,\n    likes,\n    isLiked,\n    comments,\n    setComments\n  });\n\n  return (\n    <>\n      {showModal && (\n        <Modal\n          open={showModal}\n          closeIcon\n          closeOnDimmerClick\n          onClose={() => setShowModal(false)}\n        >\n          <Modal.Content>\n            {post.picUrl ? (\n              <ImageModal {...addPropsToModal()} />\n            ) : (\n              <NoImageModal {...addPropsToModal()} />\n            )}\n          </Modal.Content>\n        </Modal>\n      )}\n\n      <Segment basic>\n        <Card color=\"teal\" fluid>\n          {post.picUrl && (\n            <Image\n              src={post.picUrl}\n              style={{ cursor: \"pointer\" }}\n              floated=\"left\"\n              wrapped\n              ui={false}\n              alt=\"PostImage\"\n              onClick={() => setShowModal(true)}\n            />\n          )}\n\n          <Card.Content>\n            <Image floated=\"left\" src={post.user.profilePicUrl} avatar circular />\n\n            {(user.role === \"root\" || post.user._id === user._id) && (\n              <>\n                <Popup\n                  on=\"click\"\n                  position=\"top right\"\n                  trigger={\n                    <Image\n                      src=\"/deleteIcon.svg\"\n                      style={{ cursor: \"pointer\" }}\n                      size=\"mini\"\n                      floated=\"right\"\n                    />\n                  }\n                >\n                  <Header as=\"h4\" content=\"Are you sure?\" />\n                  <p>This action is irreversible!</p>\n\n                  <Button\n                    color=\"red\"\n                    icon=\"trash\"\n                    content=\"Delete\"\n                    onClick={() => deletePost(post._id, setPosts, setShowToastr)}\n                  />\n                </Popup>\n              </>\n            )}\n\n            <Card.Header>\n              <Link href={`/${post.user.username}`}>\n                <a>{post.user.name}</a>\n              </Link>\n            </Card.Header>\n\n            <Card.Meta>{calculateTime(post.createdAt)}</Card.Meta>\n\n            {post.location && <Card.Meta content={post.location} />}\n\n            <Card.Description\n              style={{\n                fontSize: \"17px\",\n                letterSpacing: \"0.1px\",\n                wordSpacing: \"0.35px\"\n              }}\n            >\n              {post.text}\n            </Card.Description>\n          </Card.Content>\n\n          <Card.Content extra>\n            <Icon\n              name={isLiked ? \"heart\" : \"heart outline\"}\n              color=\"red\"\n              style={{ cursor: \"pointer\" }}\n              onClick={() => {\n                if (socket.current) {\n                  socket.current.emit(\"likePost\", {\n                    postId: post._id,\n                    userId: user._id,\n                    like: isLiked ? false : true\n                  });\n\n                  socket.current.on(\"postLiked\", () => {\n                    if (isLiked) {\n                      setLikes(prev => prev.filter(like => like.user !== user._id));\n                    }\n                    //\n                    else {\n                      setLikes(prev => [...prev, { user: user._id }]);\n                    }\n                  });\n                } else {\n                  likePost(post._id, user._id, setLikes, isLiked ? false : true);\n                }\n              }}\n            />\n\n            <LikesList\n              postId={post._id}\n              trigger={\n                likes.length > 0 && (\n                  <span className=\"spanLikesList\">\n                    {`${likes.length} ${likes.length === 1 ? \"like\" : \"likes\"}`}\n                  </span>\n                )\n              }\n            />\n\n            <Icon name=\"comment outline\" style={{ marginLeft: \"7px\" }} color=\"blue\" />\n\n            {comments.length > 0 &&\n              comments.map(\n                (comment, i) =>\n                  i < 3 && (\n                    <PostComments\n                      key={comment._id}\n                      comment={comment}\n                      postId={post._id}\n                      user={user}\n                      setComments={setComments}\n                    />\n                  )\n              )}\n\n            {comments.length > 3 && (\n              <Button\n                content=\"View More\"\n                color=\"teal\"\n                basic\n                circular\n                onClick={() => setShowModal(true)}\n              />\n            )}\n\n            <Divider hidden />\n\n            <CommentInputField user={user} postId={post._id} setComments={setComments} />\n          </Card.Content>\n        </Card>\n      </Segment>\n      <Divider hidden />\n    </>\n  );\n}\n\nexport default CardPost;\n"]},"metadata":{},"sourceType":"module"}