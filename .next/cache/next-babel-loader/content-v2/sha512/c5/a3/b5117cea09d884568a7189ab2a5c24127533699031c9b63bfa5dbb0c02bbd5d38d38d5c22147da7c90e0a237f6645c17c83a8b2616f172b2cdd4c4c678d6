{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\social\\\\social_network\\\\components\\\\Chats\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Divider, Comment, Icon, List } from \"semantic-ui-react\";\nimport { useRouter } from \"next/router\";\nimport calculateTime from \"../../utils/calculateTime\";\n\nfunction Chat(_ref) {\n  _s();\n\n  var chat = _ref.chat,\n      connectedUsers = _ref.connectedUsers,\n      deleteChat = _ref.deleteChat;\n  var router = useRouter();\n  var isOnline = connectedUsers.length > 0 && connectedUsers.filter(function (user) {\n    return user.userId === chat.messagesWith;\n  }).length > 0;\n  return __jsx(React.Fragment, null, __jsx(List, {\n    selection: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, __jsx(List.Item, {\n    active: router.query.message === chat.messagesWith,\n    onClick: function onClick() {\n      return router.push(\"/messages?message=\".concat(chat.messagesWith), undefined, {\n        shallow: true\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, __jsx(Comment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, __jsx(Comment.Avatar, {\n    src: chat.profilePicUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), __jsx(Comment.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, __jsx(Comment.Author, {\n    as: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }, chat.name, \" \", isOnline && __jsx(Icon, {\n    name: \"circle\",\n    size: \"small\",\n    color: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 30\n    }\n  })), __jsx(Comment.Metadata, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, calculateTime(chat.date)), __jsx(\"div\", {\n    style: {\n      position: \"absolute\",\n      right: \"10px\",\n      cursor: \"pointer\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, __jsx(Icon, {\n    name: \"trash alternate\",\n    color: \"red\",\n    onClick: function onClick() {\n      return deleteChat(chat.messagesWith);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }\n  }))), __jsx(Comment.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, chat.lastMessage.length > 20 ? \"\".concat(chat.lastMessage.substring(0, 20), \" ...\") : chat.lastMessage))))), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(Chat, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/social/social_network/components/Chats/Chat.js"],"names":["React","Divider","Comment","Icon","List","useRouter","calculateTime","Chat","chat","connectedUsers","deleteChat","router","isOnline","length","filter","user","userId","messagesWith","query","message","push","undefined","shallow","profilePicUrl","name","date","position","right","cursor","lastMessage","substring"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Divider, Comment, Icon, List } from \"semantic-ui-react\";\nimport { useRouter } from \"next/router\";\nimport calculateTime from \"../../utils/calculateTime\";\n\nfunction Chat({ chat, connectedUsers, deleteChat }) {\n  const router = useRouter();\n\n  const isOnline =\n    connectedUsers.length > 0 &&\n    connectedUsers.filter((user) => user.userId === chat.messagesWith).length >\n      0;\n\n  return (\n    <>\n      <List selection>\n        <List.Item\n          active={router.query.message === chat.messagesWith}\n          onClick={() =>\n            router.push(`/messages?message=${chat.messagesWith}`, undefined, {\n              shallow: true,\n            })\n          }\n        >\n          <Comment>\n            <Comment.Avatar src={chat.profilePicUrl} />\n            <Comment.Content>\n              <Comment.Author as=\"a\">\n                {chat.name}{\" \"}\n                {isOnline && <Icon name=\"circle\" size=\"small\" color=\"green\" />}\n              </Comment.Author>\n\n              <Comment.Metadata>\n                <div>{calculateTime(chat.date)}</div>\n                <div\n                  style={{\n                    position: \"absolute\",\n                    right: \"10px\",\n                    cursor: \"pointer\",\n                  }}\n                >\n                  <Icon\n                    name=\"trash alternate\"\n                    color=\"red\"\n                    onClick={() => deleteChat(chat.messagesWith)}\n                  />\n                </div>\n              </Comment.Metadata>\n\n              <Comment.Text>\n                {chat.lastMessage.length > 20\n                  ? `${chat.lastMessage.substring(0, 20)} ...`\n                  : chat.lastMessage}\n              </Comment.Text>\n            </Comment.Content>\n          </Comment>\n        </List.Item>\n      </List>\n      <Divider />\n    </>\n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}