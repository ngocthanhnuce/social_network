{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\social\\\\social_network\\\\components\\\\Layout\\\\SideMenu.js\";\nvar __jsx = React.createElement;\n// @ts-nocheck\nimport React from \"react\";\nimport { List, Icon } from \"semantic-ui-react\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport { logoutUser } from \"../../utils/authUser\";\n\nfunction SideMenu({\n  user: {\n    unreadNotification,\n    email,\n    unreadMessage,\n    username,\n    isAdmin\n  }\n}) {\n  const router = useRouter();\n\n  const isActive = route => router.pathname === route;\n\n  return __jsx(React.Fragment, null, __jsx(List, {\n    style: {\n      paddingTop: \"1rem\"\n    },\n    size: \"big\",\n    verticalAlign: \"middle\",\n    selection: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(List.Item, {\n    active: isActive(\"/\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    name: \"home\",\n    size: \"large\",\n    color: isActive(\"/\") && \"teal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), __jsx(List.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, __jsx(List.Header, {\n    content: \"Trang ch\\u1EE7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  })))), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), __jsx(Link, {\n    href: \"/messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(List.Item, {\n    active: isActive(\"/messages\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    name: unreadMessage ? \"hand point right\" : \"mail outline\",\n    size: \"large\",\n    color: isActive(\"/messages\") && \"teal\" || unreadMessage && \"orange\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), __jsx(List.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, __jsx(List.Header, {\n    content: \"Tin nh\\u1EAFn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  })))), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), __jsx(Link, {\n    href: \"/notifications\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(List.Item, {\n    active: isActive(\"/notifications\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    name: unreadNotification ? \"bell\" : \"bell outline\",\n    size: \"large\",\n    color: isActive(\"/notifications\") && \"teal\" || unreadNotification && \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), __jsx(List.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, __jsx(List.Header, {\n    content: \"Th\\xF4ng b\\xE1o\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  })))), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), __jsx(Link, {\n    href: `/${username}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(List.Item, {\n    active: router.query.username === username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    name: \"user\",\n    size: \"large\",\n    color: router.query.username === username && \"teal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), __jsx(List.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, __jsx(List.Header, {\n    content: \"Trang c\\xE1 nh\\xE2n\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  })))), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), isAdmin ? __jsx(Link, {\n    href: \"/admin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, __jsx(List.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    name: \"adn\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }), __jsx(List.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, __jsx(List.Header, {\n    content: \"Admin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  })))) : null, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), __jsx(List.Item, {\n    onClick: () => logoutUser(email),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    name: \"log out\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), __jsx(List.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, __jsx(List.Header, {\n    content: \"\\u0110\\u0103ng xu\\u1EA5t\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default SideMenu;","map":{"version":3,"sources":["C:/Users/Admin/Documents/social/social_network/components/Layout/SideMenu.js"],"names":["React","List","Icon","Link","useRouter","logoutUser","SideMenu","user","unreadNotification","email","unreadMessage","username","isAdmin","router","isActive","route","pathname","paddingTop","query"],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport React from \"react\";\nimport { List, Icon } from \"semantic-ui-react\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport { logoutUser } from \"../../utils/authUser\";\n\nfunction SideMenu({\n  user: { unreadNotification, email, unreadMessage, username, isAdmin },\n}) {\n  const router = useRouter();\n\n  const isActive = (route) => router.pathname === route;\n\n  return (\n    <>\n      <List\n        style={{ paddingTop: \"1rem\" }}\n        size=\"big\"\n        verticalAlign=\"middle\"\n        selection\n      >\n        <Link href=\"/\">\n          <List.Item active={isActive(\"/\")}>\n            <Icon name=\"home\" size=\"large\" color={isActive(\"/\") && \"teal\"} />\n            <List.Content>\n              <List.Header content=\"Trang chủ\" />\n            </List.Content>\n          </List.Item>\n        </Link>\n        <br />\n\n        <Link href=\"/messages\">\n          <List.Item active={isActive(\"/messages\")}>\n            <Icon\n              name={unreadMessage ? \"hand point right\" : \"mail outline\"}\n              size=\"large\"\n              color={\n                (isActive(\"/messages\") && \"teal\") || (unreadMessage && \"orange\")\n              }\n            />\n            <List.Content>\n              <List.Header content=\"Tin nhắn\" />\n            </List.Content>\n          </List.Item>\n        </Link>\n        <br />\n\n        <Link href=\"/notifications\">\n          <List.Item active={isActive(\"/notifications\")}>\n            <Icon\n              name={unreadNotification ? \"bell\" : \"bell outline\"}\n              size=\"large\"\n              color={\n                (isActive(\"/notifications\") && \"teal\") ||\n                (unreadNotification && \"red\")\n              }\n            />\n            <List.Content>\n              <List.Header content=\"Thông báo\" />\n            </List.Content>\n          </List.Item>\n        </Link>\n        <br />\n\n        <Link href={`/${username}`}>\n          <List.Item active={router.query.username === username}>\n            <Icon\n              name=\"user\"\n              size=\"large\"\n              color={router.query.username === username && \"teal\"}\n            />\n            <List.Content>\n              <List.Header content=\"Trang cá nhân\" />\n            </List.Content>\n          </List.Item>\n        </Link>\n        <br />\n        {isAdmin ? (\n          <Link href={\"/admin\"}>\n            <List.Item>\n              <Icon name=\"adn\" size=\"large\" />\n              <List.Content>\n                <List.Header content=\"Admin\" />\n              </List.Content>\n            </List.Item>\n          </Link>\n        ) : null}\n        <br />\n        <List.Item onClick={() => logoutUser(email)}>\n          <Icon name=\"log out\" size=\"large\" />\n          <List.Content>\n            <List.Header content=\"Đăng xuất\" />\n          </List.Content>\n        </List.Item>\n      </List>\n    </>\n  );\n}\n\nexport default SideMenu;\n"]},"metadata":{},"sourceType":"module"}