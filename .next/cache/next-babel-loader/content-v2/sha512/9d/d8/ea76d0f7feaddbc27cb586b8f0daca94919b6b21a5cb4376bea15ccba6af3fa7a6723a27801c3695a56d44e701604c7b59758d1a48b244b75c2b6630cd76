{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\social\\\\social_network\\\\components\\\\Profile\\\\Followers.js\";\nvar __jsx = React.createElement;\n// @ts-nocheck\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Image, List } from \"semantic-ui-react\";\nimport Spinner from \"../Layout/Spinner\";\nimport { NoFollowData } from \"../Layout/NoData\";\nimport { followUser, unfollowUser } from \"../../utils/profileActions\";\nimport axios from \"axios\";\nimport baseUrl from \"../../utils/baseUrl\";\nimport cookie from \"js-cookie\";\n\nconst Followers = ({\n  user,\n  loggedUserFollowStats,\n  setUserFollowStats,\n  profileUserId\n}) => {\n  const {\n    0: followers,\n    1: setFollowers\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: followLoading,\n    1: setFollowLoading\n  } = useState(false);\n  useEffect(() => {\n    const getFollowers = async () => {\n      setLoading(true);\n\n      try {\n        const res = await axios.get(`${baseUrl}/api/profile/followers/${profileUserId}`, {\n          headers: {\n            Authorization: cookie.get(\"token\")\n          }\n        });\n        setFollowers(res.data);\n      } catch (error) {\n        alert(\"Error Loading Followers\");\n      }\n\n      setLoading(false);\n    };\n\n    getFollowers();\n  }, []);\n  return __jsx(React.Fragment, null, loading ? __jsx(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }) : followers.length > 0 ? followers.map(profileFollower => {\n    const isFollowing = loggedUserFollowStats.following.length > 0 && loggedUserFollowStats.following.filter(following => following.user === profileFollower.user._id).length > 0;\n    return __jsx(List, {\n      key: profileFollower.user._id,\n      divided: true,\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, __jsx(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, __jsx(List.Content, {\n      floated: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, profileFollower.user._id !== user._id && __jsx(Button, {\n      color: isFollowing ? \"instagram\" : \"twitter\",\n      icon: isFollowing ? \"check\" : \"add user\",\n      content: isFollowing ? \"Following\" : \"Follow\",\n      disabled: followLoading,\n      onClick: () => {\n        setFollowLoading(true);\n        isFollowing ? unfollowUser(profileFollower.user._id, setUserFollowStats) : followUser(profileFollower.user._id, setUserFollowStats);\n        setFollowLoading(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    })), __jsx(Image, {\n      avatar: true,\n      src: profileFollower.user.profilePicUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }), __jsx(List.Content, {\n      as: \"a\",\n      href: `/${profileFollower.user.username}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, profileFollower.user.name)));\n  }) : __jsx(NoFollowData, {\n    followersComponent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Followers;","map":{"version":3,"sources":["C:/Users/Admin/Documents/social/social_network/components/Profile/Followers.js"],"names":["React","useState","useEffect","Button","Image","List","Spinner","NoFollowData","followUser","unfollowUser","axios","baseUrl","cookie","Followers","user","loggedUserFollowStats","setUserFollowStats","profileUserId","followers","setFollowers","loading","setLoading","followLoading","setFollowLoading","getFollowers","res","get","headers","Authorization","data","error","alert","length","map","profileFollower","isFollowing","following","filter","_id","profilePicUrl","username","name"],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Image, List } from \"semantic-ui-react\";\nimport Spinner from \"../Layout/Spinner\";\nimport { NoFollowData } from \"../Layout/NoData\";\nimport { followUser, unfollowUser } from \"../../utils/profileActions\";\nimport axios from \"axios\";\nimport baseUrl from \"../../utils/baseUrl\";\nimport cookie from \"js-cookie\";\n\nconst Followers = ({\n  user,\n  loggedUserFollowStats,\n  setUserFollowStats,\n  profileUserId,\n}) => {\n  const [followers, setFollowers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [followLoading, setFollowLoading] = useState(false);\n\n  useEffect(() => {\n    const getFollowers = async () => {\n      setLoading(true);\n      try {\n        const res = await axios.get(\n          `${baseUrl}/api/profile/followers/${profileUserId}`,\n          {\n            headers: { Authorization: cookie.get(\"token\") },\n          }\n        );\n        setFollowers(res.data);\n      } catch (error) {\n        alert(\"Error Loading Followers\");\n      }\n      setLoading(false);\n    };\n    getFollowers();\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <Spinner />\n      ) : followers.length > 0 ? (\n        followers.map((profileFollower) => {\n          const isFollowing =\n            loggedUserFollowStats.following.length > 0 &&\n            loggedUserFollowStats.following.filter(\n              (following) => following.user === profileFollower.user._id\n            ).length > 0;\n\n          return (\n            <List key={profileFollower.user._id} divided verticalAlign=\"middle\">\n              <List.Item>\n                <List.Content floated=\"right\">\n                  {profileFollower.user._id !== user._id && (\n                    <Button\n                      color={isFollowing ? \"instagram\" : \"twitter\"}\n                      icon={isFollowing ? \"check\" : \"add user\"}\n                      content={isFollowing ? \"Following\" : \"Follow\"}\n                      disabled={followLoading}\n                      onClick={() => {\n                        setFollowLoading(true);\n                        isFollowing\n                          ? unfollowUser(\n                              profileFollower.user._id,\n                              setUserFollowStats\n                            )\n                          : followUser(\n                              profileFollower.user._id,\n                              setUserFollowStats\n                            );\n\n                        setFollowLoading(false);\n                      }}\n                    />\n                  )}\n                </List.Content>\n                <Image avatar src={profileFollower.user.profilePicUrl} />\n                <List.Content as=\"a\" href={`/${profileFollower.user.username}`}>\n                  {profileFollower.user.name}\n                </List.Content>\n              </List.Item>\n            </List>\n          );\n        })\n      ) : (\n        <NoFollowData followersComponent={true} />\n      )}\n    </>\n  );\n};\n\nexport default Followers;\n"]},"metadata":{},"sourceType":"module"}