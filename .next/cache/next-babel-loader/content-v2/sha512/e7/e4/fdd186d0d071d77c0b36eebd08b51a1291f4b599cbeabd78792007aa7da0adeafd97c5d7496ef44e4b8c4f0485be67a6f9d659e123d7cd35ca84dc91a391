{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Admin/Documents/social/social_network/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"C:/Users/Admin/Documents/social/social_network/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\social\\\\social_network\\\\components\\\\Post\\\\CardPost.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Card, Icon, Image, Divider, Segment, Button, Popup, Header, Modal, Grid } from \"semantic-ui-react\";\nimport PostComments from \"./PostComments\";\nimport CommentInputField from \"./CommentInputField\";\nimport calculateTime from \"../../utils/calculateTime\";\nimport Link from \"next/link\";\nimport { deletePost, likePost } from \"../../utils/postActions\";\nimport LikesList from \"./LikesList\";\nimport ImageModal from \"./ImageModal\";\nimport NoImageModal from \"./NoImageModal\";\nimport { FacebookShareButton } from \"react-share\";\n\nfunction CardPost(_ref) {\n  _s();\n\n  var _this = this;\n\n  var post = _ref.post,\n      user = _ref.user,\n      setPosts = _ref.setPosts,\n      setShowToastr = _ref.setShowToastr,\n      socket = _ref.socket;\n\n  var _useState = useState(post.likes),\n      likes = _useState[0],\n      setLikes = _useState[1];\n\n  var isLiked = likes.length > 0 && likes.filter(function (like) {\n    return like.user === user._id;\n  }).length > 0;\n\n  var _useState2 = useState(post.comments),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  var _useState3 = useState(null),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  var _useState4 = useState(false),\n      showModal = _useState4[0],\n      setShowModal = _useState4[1];\n\n  var addPropsToModal = function addPropsToModal() {\n    return {\n      post: post,\n      user: user,\n      setLikes: setLikes,\n      likes: likes,\n      isLiked: isLiked,\n      comments: comments,\n      setComments: setComments\n    };\n  };\n\n  return __jsx(React.Fragment, null, showModal && __jsx(Modal, {\n    open: showModal,\n    closeIcon: true,\n    closeOnDimmerClick: true,\n    onClose: function onClose() {\n      return setShowModal(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, post.picUrl ? __jsx(ImageModal, _extends({}, addPropsToModal(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  })) : __jsx(NoImageModal, _extends({}, addPropsToModal(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  })))), __jsx(React.Fragment, null, __jsx(Card, {\n    color: \"teal\",\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(Card.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, __jsx(Image, {\n    floated: \"left\",\n    src: post.user.profilePicUrl,\n    avatar: true,\n    circular: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), (user.role === \"root\" || post.user._id === user._id) && __jsx(Grid.Column, {\n    floated: \"right\",\n    width: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, __jsx(Popup, {\n    on: \"click\",\n    position: \"top right\",\n    trigger: __jsx(Icon, {\n      name: \"ellipsis horizontal\",\n      size: \"small\",\n      style: {\n        cursor: \"pointer\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, __jsx(Header, {\n    as: \"h4\",\n    content: \"B\\u1EA1n c\\xF3 mu\\u1ED1n x\\xF3a b\\xE0i vi\\u1EBFt ?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }\n  }), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  }, __jsx(Button, {\n    color: \"red\",\n    icon: \"trash\",\n    content: \"Delete\",\n    onClick: function onClick() {\n      return deletePost(post._id, setPosts, setShowToastr);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  })))), __jsx(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"/\".concat(post.user.username),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, post.user.name))), __jsx(Card.Meta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, calculateTime(post.createdAt)), post.location && __jsx(Card.Meta, {\n    content: post.location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 31\n    }\n  })), post.picUrl && __jsx(Image, {\n    src: post.picUrl,\n    style: {\n      cursor: \"pointer\"\n    },\n    floated: \"left\",\n    wrapped: true,\n    ui: false,\n    alt: \"PostImage\",\n    onClick: function onClick() {\n      return setShowModal(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), __jsx(Card.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, __jsx(Card.Description, {\n    style: {\n      fontSize: \"17px\",\n      letterSpacing: \"0.1px\",\n      wordSpacing: \"0.35px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    style: {\n      color: \"black\",\n      paddingRight: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, \" \", __jsx(Link, {\n    href: \"/\".concat(post.user.username),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, post.user.name))), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, post.text)))), __jsx(Card.Content, {\n    extra: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    name: isLiked ? \"heart\" : \"heart outline\",\n    size: \"large\",\n    color: \"red\",\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: function onClick() {\n      if (socket.current) {\n        socket.current.emit(\"likePost\", {\n          postId: post._id,\n          userId: user._id,\n          like: isLiked ? false : true\n        });\n        socket.current.on(\"postLiked\", function () {\n          if (isLiked) {\n            setLikes(function (prev) {\n              return prev.filter(function (like) {\n                return like.user !== user._id;\n              });\n            });\n          } //\n          else {\n              setLikes(function (prev) {\n                return [].concat(_toConsumableArray(prev), [{\n                  user: user._id\n                }]);\n              });\n            }\n        });\n      } else {\n        likePost(post._id, user._id, setLikes, isLiked ? false : true);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }), __jsx(LikesList, {\n    postId: post._id,\n    trigger: likes.length > 0 && __jsx(\"span\", {\n      className: \"spanLikesList\",\n      style: {\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }\n    }, \"\".concat(likes.length, \" \").concat(likes.length === 1 ? \"like\" : \"likes\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }), __jsx(Icon, {\n    name: \"comment outline\",\n    size: \"large\",\n    style: {\n      marginLeft: \"7px\"\n    },\n    color: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }), __jsx(FacebookShareButton, {\n    url: \"https://social-network-98.herokuapp.com/\",\n    quote: post === null || post === void 0 ? void 0 : post.text // hashtag=\"#social_network\"\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    name: \"send\",\n    size: \"large\",\n    style: {\n      marginLeft: \"7px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  })), comments.length > 0 && comments.map(function (comment, i) {\n    return i < 3 && __jsx(PostComments, {\n      key: comment._id,\n      comment: comment,\n      postId: post._id,\n      user: user,\n      setComments: setComments,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    });\n  }), comments.length > 3 && __jsx(Button, {\n    content: \"View More\",\n    color: \"teal\",\n    basic: true,\n    circular: true,\n    onClick: function onClick() {\n      return setShowModal(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  }), __jsx(Divider, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }), __jsx(CommentInputField, {\n    user: user,\n    postId: post._id,\n    setComments: setComments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  })))), __jsx(Divider, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(CardPost, \"omR1xcd1MbppzuKtTDTb5rgaEDk=\");\n\n_c = CardPost;\nexport default CardPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardPost\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/social/social_network/components/Post/CardPost.js"],"names":["React","useState","Card","Icon","Image","Divider","Segment","Button","Popup","Header","Modal","Grid","PostComments","CommentInputField","calculateTime","Link","deletePost","likePost","LikesList","ImageModal","NoImageModal","FacebookShareButton","CardPost","post","user","setPosts","setShowToastr","socket","likes","setLikes","isLiked","length","filter","like","_id","comments","setComments","error","setError","showModal","setShowModal","addPropsToModal","picUrl","profilePicUrl","role","cursor","textAlign","username","name","createdAt","location","fontSize","letterSpacing","wordSpacing","color","paddingRight","text","current","emit","postId","userId","on","prev","marginLeft","map","comment","i"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,IADF,EAEEC,IAFF,EAGEC,KAHF,EAIEC,OAJF,EAKEC,OALF,EAMEC,MANF,EAOEC,KAPF,EAQEC,MARF,EASEC,KATF,EAUEC,IAVF,QAWO,mBAXP;AAYA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,yBAArC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,mBAAT,QAAoC,aAApC;;AAEA,SAASC,QAAT,OAAmE;AAAA;;AAAA;;AAAA,MAA/CC,IAA+C,QAA/CA,IAA+C;AAAA,MAAzCC,IAAyC,QAAzCA,IAAyC;AAAA,MAAnCC,QAAmC,QAAnCA,QAAmC;AAAA,MAAzBC,aAAyB,QAAzBA,aAAyB;AAAA,MAAVC,MAAU,QAAVA,MAAU;;AAAA,kBACvC1B,QAAQ,CAACsB,IAAI,CAACK,KAAN,CAD+B;AAAA,MAC1DA,KAD0D;AAAA,MACnDC,QADmD;;AAGjE,MAAMC,OAAO,GACXF,KAAK,CAACG,MAAN,GAAe,CAAf,IACAH,KAAK,CAACI,MAAN,CAAa,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACT,IAAL,KAAcA,IAAI,CAACU,GAA7B;AAAA,GAAb,EAA+CH,MAA/C,GAAwD,CAF1D;;AAHiE,mBAOjC9B,QAAQ,CAACsB,IAAI,CAACY,QAAN,CAPyB;AAAA,MAO1DA,QAP0D;AAAA,MAOhDC,WAPgD;;AAAA,mBASvCnC,QAAQ,CAAC,IAAD,CAT+B;AAAA,MAS1DoC,KAT0D;AAAA,MASnDC,QATmD;;AAAA,mBAW/BrC,QAAQ,CAAC,KAAD,CAXuB;AAAA,MAW1DsC,SAX0D;AAAA,MAW/CC,YAX+C;;AAajE,MAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,WAAO;AAC7BlB,MAAAA,IAAI,EAAJA,IAD6B;AAE7BC,MAAAA,IAAI,EAAJA,IAF6B;AAG7BK,MAAAA,QAAQ,EAARA,QAH6B;AAI7BD,MAAAA,KAAK,EAALA,KAJ6B;AAK7BE,MAAAA,OAAO,EAAPA,OAL6B;AAM7BK,MAAAA,QAAQ,EAARA,QAN6B;AAO7BC,MAAAA,WAAW,EAAXA;AAP6B,KAAP;AAAA,GAAxB;;AAUA,SACE,4BACGG,SAAS,IACR,MAAC,KAAD;AACE,IAAA,IAAI,EAAEA,SADR;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,kBAAkB,MAHpB;AAIE,IAAA,OAAO,EAAE;AAAA,aAAMC,YAAY,CAAC,KAAD,CAAlB;AAAA,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,IAAI,CAACmB,MAAL,GACC,MAAC,UAAD,eAAgBD,eAAe,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,GAGC,MAAC,YAAD,eAAkBA,eAAe,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJJ,CANF,CAFJ,EAkBE,4BACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,MAAZ;AAAmB,IAAA,KAAK,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,OAAO,EAAC,MADV;AAEE,IAAA,GAAG,EAAElB,IAAI,CAACC,IAAL,CAAUmB,aAFjB;AAGE,IAAA,MAAM,MAHR;AAIE,IAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQG,CAACnB,IAAI,CAACoB,IAAL,KAAc,MAAd,IAAwBrB,IAAI,CAACC,IAAL,CAAUU,GAAV,KAAkBV,IAAI,CAACU,GAAhD,KACC,MAAC,IAAD,CAAM,MAAN;AAAa,IAAA,OAAO,EAAC,OAArB;AAA6B,IAAA,KAAK,EAAC,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,QAAQ,EAAC,WAFX;AAGE,IAAA,OAAO,EACL,MAAC,IAAD;AACE,MAAA,IAAI,EAAC,qBADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAE;AAAEW,QAAAA,MAAM,EAAE;AAAV,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,MAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAgB,IAAA,OAAO,EAAC,oDAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAYE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,KAAK,EAAC,KADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,OAAO,EAAC,QAHV;AAIE,IAAA,OAAO,EAAE;AAAA,aACP9B,UAAU,CAACO,IAAI,CAACW,GAAN,EAAWT,QAAX,EAAqBC,aAArB,CADH;AAAA,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZF,CADF,CATJ,EAoCE,MAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,aAAMH,IAAI,CAACC,IAAL,CAAUuB,QAAhB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIxB,IAAI,CAACC,IAAL,CAAUwB,IAAd,CADF,CADF,CApCF,EA0CE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYlC,aAAa,CAACS,IAAI,CAAC0B,SAAN,CAAzB,CA1CF,EA4CG1B,IAAI,CAAC2B,QAAL,IAAiB,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,OAAO,EAAE3B,IAAI,CAAC2B,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5CpB,CADF,EA+CG3B,IAAI,CAACmB,MAAL,IACC,MAAC,KAAD;AACE,IAAA,GAAG,EAAEnB,IAAI,CAACmB,MADZ;AAEE,IAAA,KAAK,EAAE;AAAEG,MAAAA,MAAM,EAAE;AAAV,KAFT;AAGE,IAAA,OAAO,EAAC,MAHV;AAIE,IAAA,OAAO,MAJT;AAKE,IAAA,EAAE,EAAE,KALN;AAME,IAAA,GAAG,EAAC,WANN;AAOE,IAAA,OAAO,EAAE;AAAA,aAAML,YAAY,CAAC,IAAD,CAAlB;AAAA,KAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhDJ,EA0DE,MAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,WAAN;AACE,IAAA,KAAK,EAAE;AACLW,MAAAA,QAAQ,EAAE,MADL;AAELC,MAAAA,aAAa,EAAE,OAFV;AAGLC,MAAAA,WAAW,EAAE;AAHR,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,YAAY,EAAE;AAAhC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE,MAAC,IAAD;AAAM,IAAA,IAAI,aAAMhC,IAAI,CAACC,IAAL,CAAUuB,QAAhB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIxB,IAAI,CAACC,IAAL,CAAUwB,IAAd,CADF,CAFF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOzB,IAAI,CAACiC,IAAZ,CAPF,CAPF,CADF,CA1DF,EA8EE,MAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,IAAI,EAAE1B,OAAO,GAAG,OAAH,GAAa,eAD5B;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAC,KAHR;AAIE,IAAA,KAAK,EAAE;AAAEe,MAAAA,MAAM,EAAE;AAAV,KAJT;AAKE,IAAA,OAAO,EAAE,mBAAM;AACb,UAAIlB,MAAM,CAAC8B,OAAX,EAAoB;AAClB9B,QAAAA,MAAM,CAAC8B,OAAP,CAAeC,IAAf,CAAoB,UAApB,EAAgC;AAC9BC,UAAAA,MAAM,EAAEpC,IAAI,CAACW,GADiB;AAE9B0B,UAAAA,MAAM,EAAEpC,IAAI,CAACU,GAFiB;AAG9BD,UAAAA,IAAI,EAAEH,OAAO,GAAG,KAAH,GAAW;AAHM,SAAhC;AAMAH,QAAAA,MAAM,CAAC8B,OAAP,CAAeI,EAAf,CAAkB,WAAlB,EAA+B,YAAM;AACnC,cAAI/B,OAAJ,EAAa;AACXD,YAAAA,QAAQ,CAAC,UAACiC,IAAD;AAAA,qBACPA,IAAI,CAAC9B,MAAL,CAAY,UAACC,IAAD;AAAA,uBAAUA,IAAI,CAACT,IAAL,KAAcA,IAAI,CAACU,GAA7B;AAAA,eAAZ,CADO;AAAA,aAAD,CAAR;AAGD,WAJD,CAKA;AALA,eAMK;AACHL,cAAAA,QAAQ,CAAC,UAACiC,IAAD;AAAA,oDAAcA,IAAd,IAAoB;AAAEtC,kBAAAA,IAAI,EAAEA,IAAI,CAACU;AAAb,iBAApB;AAAA,eAAD,CAAR;AACD;AACF,SAVD;AAWD,OAlBD,MAkBO;AACLjB,QAAAA,QAAQ,CACNM,IAAI,CAACW,GADC,EAENV,IAAI,CAACU,GAFC,EAGNL,QAHM,EAINC,OAAO,GAAG,KAAH,GAAW,IAJZ,CAAR;AAMD;AACF,KAhCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAoCE,MAAC,SAAD;AACE,IAAA,MAAM,EAAEP,IAAI,CAACW,GADf;AAEE,IAAA,OAAO,EACLN,KAAK,CAACG,MAAN,GAAe,CAAf,IACE;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAgC,MAAA,KAAK,EAAE;AAAEuB,QAAAA,KAAK,EAAE;AAAT,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACM1B,KAAK,CAACG,MADZ,cACsBH,KAAK,CAACG,MAAN,KAAiB,CAAjB,GAAqB,MAArB,GAA8B,OADpD,EAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApCF,EA+CE,MAAC,IAAD;AACE,IAAA,IAAI,EAAC,iBADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAE;AAAEgC,MAAAA,UAAU,EAAE;AAAd,KAHT;AAIE,IAAA,KAAK,EAAC,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/CF,EAqDE,MAAC,mBAAD;AACE,IAAA,GAAG,EAAE,0CADP;AAEE,IAAA,KAAK,EAAExC,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEiC,IAFf,CAGE;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,IAAI,EAAC,OAAvB;AAA+B,IAAA,KAAK,EAAE;AAAEO,MAAAA,UAAU,EAAE;AAAd,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CArDF,EA4DG5B,QAAQ,CAACJ,MAAT,GAAkB,CAAlB,IACCI,QAAQ,CAAC6B,GAAT,CACE,UAACC,OAAD,EAAUC,CAAV;AAAA,WACEA,CAAC,GAAG,CAAJ,IACE,MAAC,YAAD;AACE,MAAA,GAAG,EAAED,OAAO,CAAC/B,GADf;AAEE,MAAA,OAAO,EAAE+B,OAFX;AAGE,MAAA,MAAM,EAAE1C,IAAI,CAACW,GAHf;AAIE,MAAA,IAAI,EAAEV,IAJR;AAKE,MAAA,WAAW,EAAEY,WALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAAA,GADF,CA7DJ,EA0EGD,QAAQ,CAACJ,MAAT,GAAkB,CAAlB,IACC,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,KAAK,MAHP;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,OAAO,EAAE;AAAA,aAAMS,YAAY,CAAC,IAAD,CAAlB;AAAA,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3EJ,EAoFE,MAAC,OAAD;AAAS,IAAA,MAAM,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApFF,EAsFE,MAAC,iBAAD;AACE,IAAA,IAAI,EAAEhB,IADR;AAEE,IAAA,MAAM,EAAED,IAAI,CAACW,GAFf;AAGE,IAAA,WAAW,EAAEE,WAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtFF,CA9EF,CADF,CAlBF,EA+LE,MAAC,OAAD;AAAS,IAAA,MAAM,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/LF,CADF;AAmMD;;GA1NQd,Q;;KAAAA,Q;AA4NT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Card,\n  Icon,\n  Image,\n  Divider,\n  Segment,\n  Button,\n  Popup,\n  Header,\n  Modal,\n  Grid,\n} from \"semantic-ui-react\";\nimport PostComments from \"./PostComments\";\nimport CommentInputField from \"./CommentInputField\";\nimport calculateTime from \"../../utils/calculateTime\";\nimport Link from \"next/link\";\nimport { deletePost, likePost } from \"../../utils/postActions\";\nimport LikesList from \"./LikesList\";\nimport ImageModal from \"./ImageModal\";\nimport NoImageModal from \"./NoImageModal\";\nimport { FacebookShareButton } from \"react-share\";\n\nfunction CardPost({ post, user, setPosts, setShowToastr, socket }) {\n  const [likes, setLikes] = useState(post.likes);\n\n  const isLiked =\n    likes.length > 0 &&\n    likes.filter((like) => like.user === user._id).length > 0;\n\n  const [comments, setComments] = useState(post.comments);\n\n  const [error, setError] = useState(null);\n\n  const [showModal, setShowModal] = useState(false);\n\n  const addPropsToModal = () => ({\n    post,\n    user,\n    setLikes,\n    likes,\n    isLiked,\n    comments,\n    setComments,\n  });\n\n  return (\n    <>\n      {showModal && (\n        <Modal\n          open={showModal}\n          closeIcon\n          closeOnDimmerClick\n          onClose={() => setShowModal(false)}\n        >\n          <Modal.Content>\n            {post.picUrl ? (\n              <ImageModal {...addPropsToModal()} />\n            ) : (\n              <NoImageModal {...addPropsToModal()} />\n            )}\n          </Modal.Content>\n        </Modal>\n      )}\n\n      <>\n        <Card color=\"teal\" fluid>\n          <Card.Content>\n            <Image\n              floated=\"left\"\n              src={post.user.profilePicUrl}\n              avatar\n              circular\n            />\n\n            {(user.role === \"root\" || post.user._id === user._id) && (\n              <Grid.Column floated=\"right\" width=\"2\">\n                <Popup\n                  on=\"click\"\n                  position=\"top right\"\n                  trigger={\n                    <Icon\n                      name=\"ellipsis horizontal\"\n                      size=\"small\"\n                      style={{ cursor: \"pointer\" }}\n                    />\n                  }\n                >\n                  <Header as=\"h4\" content=\"Bạn có muốn xóa bài viết ?\" />\n                  <div style={{ textAlign: \"center\" }}>\n                    <Button\n                      color=\"red\"\n                      icon=\"trash\"\n                      content=\"Delete\"\n                      onClick={() =>\n                        deletePost(post._id, setPosts, setShowToastr)\n                      }\n                    />\n                  </div>\n                </Popup>\n              </Grid.Column>\n            )}\n\n            <Card.Header>\n              <Link href={`/${post.user.username}`}>\n                <a>{post.user.name}</a>\n              </Link>\n            </Card.Header>\n\n            <Card.Meta>{calculateTime(post.createdAt)}</Card.Meta>\n\n            {post.location && <Card.Meta content={post.location} />}\n          </Card.Content>\n          {post.picUrl && (\n            <Image\n              src={post.picUrl}\n              style={{ cursor: \"pointer\" }}\n              floated=\"left\"\n              wrapped\n              ui={false}\n              alt=\"PostImage\"\n              onClick={() => setShowModal(true)}\n            />\n          )}\n          <Card.Content>\n            <Card.Description\n              style={{\n                fontSize: \"17px\",\n                letterSpacing: \"0.1px\",\n                wordSpacing: \"0.35px\",\n              }}\n            >\n              <p>\n                <span style={{ color: \"black\", paddingRight: \"5px\" }}>\n                  {\" \"}\n                  <Link href={`/${post.user.username}`}>\n                    <a>{post.user.name}</a>\n                  </Link>\n                </span>\n                <span>{post.text}</span>\n              </p>\n            </Card.Description>\n          </Card.Content>\n\n          <Card.Content extra>\n            <Icon\n              name={isLiked ? \"heart\" : \"heart outline\"}\n              size=\"large\"\n              color=\"red\"\n              style={{ cursor: \"pointer\" }}\n              onClick={() => {\n                if (socket.current) {\n                  socket.current.emit(\"likePost\", {\n                    postId: post._id,\n                    userId: user._id,\n                    like: isLiked ? false : true,\n                  });\n\n                  socket.current.on(\"postLiked\", () => {\n                    if (isLiked) {\n                      setLikes((prev) =>\n                        prev.filter((like) => like.user !== user._id)\n                      );\n                    }\n                    //\n                    else {\n                      setLikes((prev) => [...prev, { user: user._id }]);\n                    }\n                  });\n                } else {\n                  likePost(\n                    post._id,\n                    user._id,\n                    setLikes,\n                    isLiked ? false : true\n                  );\n                }\n              }}\n            />\n\n            <LikesList\n              postId={post._id}\n              trigger={\n                likes.length > 0 && (\n                  <span className=\"spanLikesList\" style={{ color: \"black\" }}>\n                    {`${likes.length} ${likes.length === 1 ? \"like\" : \"likes\"}`}\n                  </span>\n                )\n              }\n            />\n\n            <Icon\n              name=\"comment outline\"\n              size=\"large\"\n              style={{ marginLeft: \"7px\" }}\n              color=\"blue\"\n            />\n            <FacebookShareButton\n              url={\"https://social-network-98.herokuapp.com/\"}\n              quote={post?.text}\n              // hashtag=\"#social_network\"\n            >\n              <Icon name=\"send\" size=\"large\" style={{ marginLeft: \"7px\" }} />\n            </FacebookShareButton>\n            {comments.length > 0 &&\n              comments.map(\n                (comment, i) =>\n                  i < 3 && (\n                    <PostComments\n                      key={comment._id}\n                      comment={comment}\n                      postId={post._id}\n                      user={user}\n                      setComments={setComments}\n                    />\n                  )\n              )}\n\n            {comments.length > 3 && (\n              <Button\n                content=\"View More\"\n                color=\"teal\"\n                basic\n                circular\n                onClick={() => setShowModal(true)}\n              />\n            )}\n\n            <Divider hidden />\n\n            <CommentInputField\n              user={user}\n              postId={post._id}\n              setComments={setComments}\n            />\n          </Card.Content>\n        </Card>\n      </>\n      <Divider hidden />\n    </>\n  );\n}\n\nexport default CardPost;\n"]},"metadata":{},"sourceType":"module"}