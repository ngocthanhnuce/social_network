{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Admin/Documents/social/social_network/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:/Users/Admin/Documents/social/social_network/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"C:/Users/Admin/Documents/social/social_network/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"C:/Users/Admin/Documents/social/social_network/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\social\\\\social_network\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport baseUrl from \"../utils/baseUrl\";\nimport CreatePost from \"../components/Post/CreatePost\";\nimport CardPost from \"../components/Post/CardPost\";\nimport { Segment } from \"semantic-ui-react\";\nimport { parseCookies } from \"nookies\";\nimport { NoPosts } from \"../components/Layout/NoData\";\nimport { PostDeleteToastr } from \"../components/Layout/Toastr\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { PlaceHolderPosts, EndMessage } from \"../components/Layout/PlaceHolderGroup\";\nimport cookie from \"js-cookie\";\nimport getUserInfo from \"../utils/getUserInfo\";\nimport MessageNotificationModal from \"../components/Home/MessageNotificationModal\";\nimport newMsgSound from \"../utils/newMsgSound\";\nimport NotificationPortal from \"../components/Home/NotificationPortal\";\n\nfunction Index(_ref) {\n  _s();\n\n  var _this = this;\n\n  var user = _ref.user,\n      postsData = _ref.postsData,\n      errorLoading = _ref.errorLoading;\n\n  var _useState = useState(postsData || []),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  var _useState2 = useState(false),\n      showToastr = _useState2[0],\n      setShowToastr = _useState2[1];\n\n  var _useState3 = useState(true),\n      hasMore = _useState3[0],\n      setHasMore = _useState3[1];\n\n  var _useState4 = useState(2),\n      pageNumber = _useState4[0],\n      setPageNumber = _useState4[1];\n\n  var socket = useRef();\n\n  var _useState5 = useState(null),\n      newMessageReceived = _useState5[0],\n      setNewMessageReceived = _useState5[1];\n\n  var _useState6 = useState(false),\n      newMessageModal = _useState6[0],\n      showNewMessageModal = _useState6[1];\n\n  var _useState7 = useState(null),\n      newNotification = _useState7[0],\n      setNewNotification = _useState7[1];\n\n  var _useState8 = useState(false),\n      notificationPopup = _useState8[0],\n      showNotificationPopup = _useState8[1];\n\n  useEffect(function () {\n    if (!socket.current) {\n      socket.current = io(baseUrl);\n    }\n\n    if (socket.current) {\n      socket.current.emit(\"join\", {\n        userId: user._id\n      });\n      socket.current.on(\"newMsgReceived\", /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n          var newMsg, _yield$getUserInfo, name, profilePicUrl;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  newMsg = _ref2.newMsg;\n                  _context.next = 3;\n                  return getUserInfo(newMsg.sender);\n\n                case 3:\n                  _yield$getUserInfo = _context.sent;\n                  name = _yield$getUserInfo.name;\n                  profilePicUrl = _yield$getUserInfo.profilePicUrl;\n\n                  if (user.newMessagePopup) {\n                    setNewMessageReceived(_objectSpread(_objectSpread({}, newMsg), {}, {\n                      senderName: name,\n                      senderProfilePic: profilePicUrl\n                    }));\n                    showNewMessageModal(true);\n                  }\n\n                  newMsgSound(name);\n\n                case 8:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    }\n\n    document.title = \"Welcome, \".concat(user.name.split(\" \")[0]);\n    return function () {\n      if (socket.current) {\n        socket.current.emit(\"disconnect\");\n        socket.current.off();\n      }\n    };\n  }, []);\n  useEffect(function () {\n    showToastr && setTimeout(function () {\n      return setShowToastr(false);\n    }, 3000);\n  }, [showToastr]);\n\n  var fetchDataOnScroll = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.get(\"\".concat(baseUrl, \"/api/posts\"), {\n                headers: {\n                  Authorization: cookie.get(\"token\")\n                },\n                params: {\n                  pageNumber: pageNumber\n                }\n              });\n\n            case 3:\n              res = _context2.sent;\n              if (res.data.length === 0) setHasMore(false);\n              setPosts(function (prev) {\n                return [].concat(_toConsumableArray(prev), _toConsumableArray(res.data));\n              });\n              setPageNumber(function (prev) {\n                return prev + 1;\n              });\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              alert(\"Error fetching Posts\");\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 9]]);\n    }));\n\n    return function fetchDataOnScroll() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (socket.current) {\n      socket.current.on(\"newNotificationReceived\", function (_ref5) {\n        var name = _ref5.name,\n            profilePicUrl = _ref5.profilePicUrl,\n            username = _ref5.username,\n            postId = _ref5.postId;\n        setNewNotification({\n          name: name,\n          profilePicUrl: profilePicUrl,\n          username: username,\n          postId: postId\n        });\n        showNotificationPopup(true);\n      });\n    }\n  }, []);\n  return __jsx(React.Fragment, null, notificationPopup && newNotification !== null && __jsx(NotificationPortal, {\n    newNotification: newNotification,\n    notificationPopup: notificationPopup,\n    showNotificationPopup: showNotificationPopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), showToastr && __jsx(PostDeleteToastr, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 22\n    }\n  }), newMessageModal && newMessageReceived !== null && __jsx(MessageNotificationModal, {\n    socket: socket,\n    showNewMessageModal: showNewMessageModal,\n    newMessageModal: newMessageModal,\n    newMessageReceived: newMessageReceived,\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }), __jsx(Segment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, __jsx(CreatePost, {\n    user: user,\n    setPosts: setPosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }), posts.length === 0 || errorLoading ? __jsx(NoPosts, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }) : __jsx(InfiniteScroll, {\n    hasMore: hasMore,\n    next: fetchDataOnScroll,\n    loader: __jsx(PlaceHolderPosts, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }),\n    endMessage: __jsx(EndMessage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }),\n    dataLength: posts.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, posts.map(function (post) {\n    return __jsx(CardPost, {\n      socket: socket,\n      key: post._id,\n      post: post,\n      user: user,\n      setPosts: setPosts,\n      setShowToastr: setShowToastr,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    });\n  }))));\n}\n\n_s(Index, \"FkEFXfA3xeQl3rU2iV5MPpq3a4A=\");\n\n_c = Index;\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(ctx) {\n    var _parseCookies, token, res;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _parseCookies = parseCookies(ctx), token = _parseCookies.token;\n            _context3.next = 4;\n            return axios.get(\"\".concat(baseUrl, \"/api/posts\"), {\n              headers: {\n                Authorization: token\n              },\n              params: {\n                pageNumber: 1\n              }\n            });\n\n          case 4:\n            res = _context3.sent;\n            return _context3.abrupt(\"return\", {\n              postsData: res.data\n            });\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](0);\n            return _context3.abrupt(\"return\", {\n              errorLoading: true\n            });\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 8]]);\n  }));\n\n  return function (_x2) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/social/social_network/pages/index.js"],"names":["React","useEffect","useRef","useState","io","axios","baseUrl","CreatePost","CardPost","Segment","parseCookies","NoPosts","PostDeleteToastr","InfiniteScroll","PlaceHolderPosts","EndMessage","cookie","getUserInfo","MessageNotificationModal","newMsgSound","NotificationPortal","Index","user","postsData","errorLoading","posts","setPosts","showToastr","setShowToastr","hasMore","setHasMore","pageNumber","setPageNumber","socket","newMessageReceived","setNewMessageReceived","newMessageModal","showNewMessageModal","newNotification","setNewNotification","notificationPopup","showNotificationPopup","current","emit","userId","_id","on","newMsg","sender","name","profilePicUrl","newMessagePopup","senderName","senderProfilePic","document","title","split","off","setTimeout","fetchDataOnScroll","get","headers","Authorization","params","res","data","length","prev","alert","username","postId","map","post","getInitialProps","ctx","token"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport baseUrl from \"../utils/baseUrl\";\nimport CreatePost from \"../components/Post/CreatePost\";\nimport CardPost from \"../components/Post/CardPost\";\nimport { Segment } from \"semantic-ui-react\";\nimport { parseCookies } from \"nookies\";\nimport { NoPosts } from \"../components/Layout/NoData\";\nimport { PostDeleteToastr } from \"../components/Layout/Toastr\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { PlaceHolderPosts, EndMessage } from \"../components/Layout/PlaceHolderGroup\";\nimport cookie from \"js-cookie\";\nimport getUserInfo from \"../utils/getUserInfo\";\nimport MessageNotificationModal from \"../components/Home/MessageNotificationModal\";\nimport newMsgSound from \"../utils/newMsgSound\";\nimport NotificationPortal from \"../components/Home/NotificationPortal\";\n\nfunction Index({ user, postsData, errorLoading }) {\n  const [posts, setPosts] = useState(postsData || []);\n  const [showToastr, setShowToastr] = useState(false);\n  const [hasMore, setHasMore] = useState(true);\n\n  const [pageNumber, setPageNumber] = useState(2);\n\n  const socket = useRef();\n\n  const [newMessageReceived, setNewMessageReceived] = useState(null);\n  const [newMessageModal, showNewMessageModal] = useState(false);\n\n  const [newNotification, setNewNotification] = useState(null);\n  const [notificationPopup, showNotificationPopup] = useState(false);\n\n  useEffect(() => {\n    if (!socket.current) {\n      socket.current = io(baseUrl);\n    }\n\n    if (socket.current) {\n      socket.current.emit(\"join\", { userId: user._id });\n\n      socket.current.on(\"newMsgReceived\", async ({ newMsg }) => {\n        const { name, profilePicUrl } = await getUserInfo(newMsg.sender);\n\n        if (user.newMessagePopup) {\n          setNewMessageReceived({\n            ...newMsg,\n            senderName: name,\n            senderProfilePic: profilePicUrl\n          });\n          showNewMessageModal(true);\n        }\n        newMsgSound(name);\n      });\n    }\n\n    document.title = `Welcome, ${user.name.split(\" \")[0]}`;\n\n    return () => {\n      if (socket.current) {\n        socket.current.emit(\"disconnect\");\n        socket.current.off();\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    showToastr && setTimeout(() => setShowToastr(false), 3000);\n  }, [showToastr]);\n\n  const fetchDataOnScroll = async () => {\n    try {\n      const res = await axios.get(`${baseUrl}/api/posts`, {\n        headers: { Authorization: cookie.get(\"token\") },\n        params: { pageNumber }\n      });\n\n      if (res.data.length === 0) setHasMore(false);\n\n      setPosts(prev => [...prev, ...res.data]);\n      setPageNumber(prev => prev + 1);\n    } catch (error) {\n      alert(\"Error fetching Posts\");\n    }\n  };\n\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on(\n        \"newNotificationReceived\",\n        ({ name, profilePicUrl, username, postId }) => {\n          setNewNotification({ name, profilePicUrl, username, postId });\n\n          showNotificationPopup(true);\n        }\n      );\n    }\n  }, []);\n\n  return (\n    <>\n      {notificationPopup && newNotification !== null && (\n        <NotificationPortal\n          newNotification={newNotification}\n          notificationPopup={notificationPopup}\n          showNotificationPopup={showNotificationPopup}\n        />\n      )}\n\n      {showToastr && <PostDeleteToastr />}\n\n      {newMessageModal && newMessageReceived !== null && (\n        <MessageNotificationModal\n          socket={socket}\n          showNewMessageModal={showNewMessageModal}\n          newMessageModal={newMessageModal}\n          newMessageReceived={newMessageReceived}\n          user={user}\n        />\n      )}\n\n      <Segment>\n        <CreatePost user={user} setPosts={setPosts} />\n\n        {posts.length === 0 || errorLoading ? (\n          <NoPosts />\n        ) : (\n          <InfiniteScroll\n            hasMore={hasMore}\n            next={fetchDataOnScroll}\n            loader={<PlaceHolderPosts />}\n            endMessage={<EndMessage />}\n            dataLength={posts.length}\n          >\n            {posts.map(post => (\n              <CardPost\n                socket={socket}\n                key={post._id}\n                post={post}\n                user={user}\n                setPosts={setPosts}\n                setShowToastr={setShowToastr}\n              />\n            ))}\n          </InfiniteScroll>\n        )}\n      </Segment>\n    </>\n  );\n}\n\nIndex.getInitialProps = async ctx => {\n  try {\n    const { token } = parseCookies(ctx);\n\n    const res = await axios.get(`${baseUrl}/api/posts`, {\n      headers: { Authorization: token },\n      params: { pageNumber: 1 }\n    });\n\n    return { postsData: res.data };\n  } catch (error) {\n    return { errorLoading: true };\n  }\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}