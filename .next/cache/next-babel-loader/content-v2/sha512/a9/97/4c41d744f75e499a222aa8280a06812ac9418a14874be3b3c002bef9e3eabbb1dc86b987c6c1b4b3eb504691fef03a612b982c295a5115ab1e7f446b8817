{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\social\\\\social_network\\\\pages\\\\[username].js\";\nvar __jsx = React.createElement;\n// @ts-nocheck\nimport React, { useEffect, useState, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport baseUrl from \"../utils/baseUrl\";\nimport { parseCookies } from \"nookies\";\nimport { Grid } from \"semantic-ui-react\";\nimport { NoProfilePosts, NoProfile } from \"../components/Layout/NoData\";\nimport CardPost from \"../components/Post/CardPost\";\nimport cookie from \"js-cookie\";\nimport { PlaceHolderPosts } from \"../components/Layout/PlaceHolderGroup\";\nimport ProfileMenuTabs from \"../components/Profile/ProfileMenuTabs\";\nimport ProfileHeader from \"../components/Profile/ProfileHeader\";\nimport Followers from \"../components/Profile/Followers\";\nimport Following from \"../components/Profile/Following\";\nimport UpdateProfile from \"../components/Profile/UpdateProfile\";\nimport Settings from \"../components/Profile/Settings\";\nimport { PostDeleteToastr } from \"../components/Layout/Toastr\";\n\nfunction ProfilePage({\n  errorLoading,\n  profile,\n  followersLength,\n  followingLength,\n  user,\n  userFollowStats\n}) {\n  const router = useRouter();\n  const {\n    0: posts,\n    1: setPosts\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: showToastr,\n    1: setShowToastr\n  } = useState(false);\n  const {\n    0: activeItem,\n    1: setActiveItem\n  } = useState(\"profile\");\n\n  const handleItemClick = clickedTab => setActiveItem(clickedTab);\n\n  const {\n    0: loggedUserFollowStats,\n    1: setUserFollowStats\n  } = useState(userFollowStats);\n  const ownAccount = profile.user._id === user._id;\n  if (errorLoading) return __jsx(NoProfile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 28\n    }\n  });\n  useEffect(() => {\n    const getPosts = async () => {\n      setLoading(true);\n\n      try {\n        const {\n          username\n        } = router.query;\n        const res = await axios.get(`${baseUrl}/api/profile/posts/${username}`, {\n          headers: {\n            Authorization: cookie.get(\"token\")\n          }\n        });\n        setPosts(res.data);\n      } catch (error) {\n        alert(\"Error Loading Posts\");\n      }\n\n      setLoading(false);\n    };\n\n    getPosts();\n  }, [router.query.username]);\n  useEffect(() => {\n    showToastr && setTimeout(() => setShowToastr(false), 4000);\n  }, [showToastr]);\n  const socket = useRef();\n  useEffect(() => {\n    if (!socket.current) {\n      socket.current = io(baseUrl);\n    }\n\n    if (socket.current) {\n      socket.current.emit(\"join\", {\n        userId: user._id\n      });\n    }\n\n    return () => {\n      if (socket.current) {\n        socket.current.emit(\"disconnect\");\n        socket.current.off();\n      }\n    };\n  }, []);\n  return __jsx(React.Fragment, null, showToastr && __jsx(PostDeleteToastr, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 22\n    }\n  }), __jsx(Grid, {\n    stackable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, __jsx(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, __jsx(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, __jsx(ProfileMenuTabs, {\n    activeItem: activeItem,\n    handleItemClick: handleItemClick,\n    followersLength: followersLength,\n    followingLength: followingLength,\n    ownAccount: ownAccount,\n    loggedUserFollowStats: loggedUserFollowStats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }))), __jsx(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, __jsx(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, activeItem === \"profile\" && __jsx(React.Fragment, null, __jsx(ProfileHeader, {\n    profile: profile,\n    ownAccount: ownAccount,\n    loggedUserFollowStats: loggedUserFollowStats,\n    setUserFollowStats: setUserFollowStats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }), loading ? __jsx(PlaceHolderPosts, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }\n  }) : posts.length > 0 ? posts.map(post => __jsx(CardPost, {\n    socket: socket,\n    key: post._id,\n    post: post,\n    user: user,\n    setPosts: setPosts,\n    setShowToastr: setShowToastr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  })) : __jsx(NoProfilePosts, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  })), activeItem === \"followers\" && __jsx(Followers, {\n    user: user,\n    loggedUserFollowStats: loggedUserFollowStats,\n    setUserFollowStats: setUserFollowStats,\n    profileUserId: profile.user._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }), activeItem === \"following\" && __jsx(Following, {\n    user: user,\n    loggedUserFollowStats: loggedUserFollowStats,\n    setUserFollowStats: setUserFollowStats,\n    profileUserId: profile.user._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }), activeItem === \"updateProfile\" && __jsx(UpdateProfile, {\n    Profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 48\n    }\n  }), activeItem === \"settings\" && __jsx(Settings, {\n    newMessagePopup: user.newMessagePopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  })))));\n}\n\nProfilePage.getInitialProps = async ctx => {\n  try {\n    const {\n      username\n    } = ctx.query;\n    const {\n      token\n    } = parseCookies(ctx);\n    const res = await axios.get(`${baseUrl}/api/profile/${username}`, {\n      headers: {\n        Authorization: token\n      }\n    });\n    const {\n      profile,\n      followersLength,\n      followingLength\n    } = res.data;\n    return {\n      profile,\n      followersLength,\n      followingLength\n    };\n  } catch (error) {\n    return {\n      errorLoading: true\n    };\n  }\n};\n\nexport default ProfilePage;","map":{"version":3,"sources":["C:/Users/Admin/Documents/social/social_network/pages/[username].js"],"names":["React","useEffect","useState","useRef","io","useRouter","axios","baseUrl","parseCookies","Grid","NoProfilePosts","NoProfile","CardPost","cookie","PlaceHolderPosts","ProfileMenuTabs","ProfileHeader","Followers","Following","UpdateProfile","Settings","PostDeleteToastr","ProfilePage","errorLoading","profile","followersLength","followingLength","user","userFollowStats","router","posts","setPosts","loading","setLoading","showToastr","setShowToastr","activeItem","setActiveItem","handleItemClick","clickedTab","loggedUserFollowStats","setUserFollowStats","ownAccount","_id","getPosts","username","query","res","get","headers","Authorization","data","error","alert","setTimeout","socket","current","emit","userId","off","length","map","post","newMessagePopup","getInitialProps","ctx","token"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,cAAT,EAAyBC,SAAzB,QAA0C,6BAA1C;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,gBAAT,QAAiC,uCAAjC;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,gBAAT,QAAiC,6BAAjC;;AAEA,SAASC,WAAT,CAAqB;AACnBC,EAAAA,YADmB;AAEnBC,EAAAA,OAFmB;AAGnBC,EAAAA,eAHmB;AAInBC,EAAAA,eAJmB;AAKnBC,EAAAA,IALmB;AAMnBC,EAAAA;AANmB,CAArB,EAOG;AACD,QAAMC,MAAM,GAAGxB,SAAS,EAAxB;AAEA,QAAM;AAAA,OAACyB,KAAD;AAAA,OAAQC;AAAR,MAAoB7B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAAC8B,OAAD;AAAA,OAAUC;AAAV,MAAwB/B,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACgC,UAAD;AAAA,OAAaC;AAAb,MAA8BjC,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAM;AAAA,OAACkC,UAAD;AAAA,OAAaC;AAAb,MAA8BnC,QAAQ,CAAC,SAAD,CAA5C;;AACA,QAAMoC,eAAe,GAAGC,UAAU,IAAIF,aAAa,CAACE,UAAD,CAAnD;;AAEA,QAAM;AAAA,OAACC,qBAAD;AAAA,OAAwBC;AAAxB,MAA8CvC,QAAQ,CAAC0B,eAAD,CAA5D;AAEA,QAAMc,UAAU,GAAGlB,OAAO,CAACG,IAAR,CAAagB,GAAb,KAAqBhB,IAAI,CAACgB,GAA7C;AAEA,MAAIpB,YAAJ,EAAkB,OAAO,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAElBtB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM2C,QAAQ,GAAG,YAAY;AAC3BX,MAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,UAAI;AACF,cAAM;AAAEY,UAAAA;AAAF,YAAehB,MAAM,CAACiB,KAA5B;AACA,cAAMC,GAAG,GAAG,MAAMzC,KAAK,CAAC0C,GAAN,CAAW,GAAEzC,OAAQ,sBAAqBsC,QAAS,EAAnD,EAAsD;AACtEI,UAAAA,OAAO,EAAE;AAAEC,YAAAA,aAAa,EAAErC,MAAM,CAACmC,GAAP,CAAW,OAAX;AAAjB;AAD6D,SAAtD,CAAlB;AAIAjB,QAAAA,QAAQ,CAACgB,GAAG,CAACI,IAAL,CAAR;AACD,OAPD,CAOE,OAAOC,KAAP,EAAc;AACdC,QAAAA,KAAK,CAAC,qBAAD,CAAL;AACD;;AAEDpB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAfD;;AAgBAW,IAAAA,QAAQ;AACT,GAlBQ,EAkBN,CAACf,MAAM,CAACiB,KAAP,CAAaD,QAAd,CAlBM,CAAT;AAoBA5C,EAAAA,SAAS,CAAC,MAAM;AACdiC,IAAAA,UAAU,IAAIoB,UAAU,CAAC,MAAMnB,aAAa,CAAC,KAAD,CAApB,EAA6B,IAA7B,CAAxB;AACD,GAFQ,EAEN,CAACD,UAAD,CAFM,CAAT;AAIA,QAAMqB,MAAM,GAAGpD,MAAM,EAArB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACsD,MAAM,CAACC,OAAZ,EAAqB;AACnBD,MAAAA,MAAM,CAACC,OAAP,GAAiBpD,EAAE,CAACG,OAAD,CAAnB;AACD;;AAED,QAAIgD,MAAM,CAACC,OAAX,EAAoB;AAClBD,MAAAA,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAoB,MAApB,EAA4B;AAAEC,QAAAA,MAAM,EAAE/B,IAAI,CAACgB;AAAf,OAA5B;AACD;;AAED,WAAO,MAAM;AACX,UAAIY,MAAM,CAACC,OAAX,EAAoB;AAClBD,QAAAA,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAoB,YAApB;AACAF,QAAAA,MAAM,CAACC,OAAP,CAAeG,GAAf;AACD;AACF,KALD;AAMD,GAfQ,EAeN,EAfM,CAAT;AAiBA,SACE,4BACGzB,UAAU,IAAI,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjB,EAGE,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AACE,IAAA,UAAU,EAAEE,UADd;AAEE,IAAA,eAAe,EAAEE,eAFnB;AAGE,IAAA,eAAe,EAAEb,eAHnB;AAIE,IAAA,eAAe,EAAEC,eAJnB;AAKE,IAAA,UAAU,EAAEgB,UALd;AAME,IAAA,qBAAqB,EAAEF,qBANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAcE,MAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,UAAU,KAAK,SAAf,IACC,4BACE,MAAC,aAAD;AACE,IAAA,OAAO,EAAEZ,OADX;AAEE,IAAA,UAAU,EAAEkB,UAFd;AAGE,IAAA,qBAAqB,EAAEF,qBAHzB;AAIE,IAAA,kBAAkB,EAAEC,kBAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQGT,OAAO,GACN,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAEJF,KAAK,CAAC8B,MAAN,GAAe,CAAf,GACF9B,KAAK,CAAC+B,GAAN,CAAUC,IAAI,IACZ,MAAC,QAAD;AACE,IAAA,MAAM,EAAEP,MADV;AAEE,IAAA,GAAG,EAAEO,IAAI,CAACnB,GAFZ;AAGE,IAAA,IAAI,EAAEmB,IAHR;AAIE,IAAA,IAAI,EAAEnC,IAJR;AAKE,IAAA,QAAQ,EAAEI,QALZ;AAME,IAAA,aAAa,EAAEI,aANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADE,GAYF,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBJ,CAFJ,EA6BGC,UAAU,KAAK,WAAf,IACC,MAAC,SAAD;AACE,IAAA,IAAI,EAAET,IADR;AAEE,IAAA,qBAAqB,EAAEa,qBAFzB;AAGE,IAAA,kBAAkB,EAAEC,kBAHtB;AAIE,IAAA,aAAa,EAAEjB,OAAO,CAACG,IAAR,CAAagB,GAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BJ,EAsCGP,UAAU,KAAK,WAAf,IACC,MAAC,SAAD;AACE,IAAA,IAAI,EAAET,IADR;AAEE,IAAA,qBAAqB,EAAEa,qBAFzB;AAGE,IAAA,kBAAkB,EAAEC,kBAHtB;AAIE,IAAA,aAAa,EAAEjB,OAAO,CAACG,IAAR,CAAagB,GAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCJ,EA+CGP,UAAU,KAAK,eAAf,IAAkC,MAAC,aAAD;AAAe,IAAA,OAAO,EAAEZ,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/CrC,EAiDGY,UAAU,KAAK,UAAf,IACC,MAAC,QAAD;AAAU,IAAA,eAAe,EAAET,IAAI,CAACoC,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlDJ,CADF,CAdF,CAHF,CADF;AA4ED;;AAEDzC,WAAW,CAAC0C,eAAZ,GAA8B,MAAMC,GAAN,IAAa;AACzC,MAAI;AACF,UAAM;AAAEpB,MAAAA;AAAF,QAAeoB,GAAG,CAACnB,KAAzB;AACA,UAAM;AAAEoB,MAAAA;AAAF,QAAY1D,YAAY,CAACyD,GAAD,CAA9B;AAEA,UAAMlB,GAAG,GAAG,MAAMzC,KAAK,CAAC0C,GAAN,CAAW,GAAEzC,OAAQ,gBAAesC,QAAS,EAA7C,EAAgD;AAChEI,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAEgB;AAAjB;AADuD,KAAhD,CAAlB;AAIA,UAAM;AAAE1C,MAAAA,OAAF;AAAWC,MAAAA,eAAX;AAA4BC,MAAAA;AAA5B,QAAgDqB,GAAG,CAACI,IAA1D;AAEA,WAAO;AAAE3B,MAAAA,OAAF;AAAWC,MAAAA,eAAX;AAA4BC,MAAAA;AAA5B,KAAP;AACD,GAXD,CAWE,OAAO0B,KAAP,EAAc;AACd,WAAO;AAAE7B,MAAAA,YAAY,EAAE;AAAhB,KAAP;AACD;AACF,CAfD;;AAiBA,eAAeD,WAAf","sourcesContent":["// @ts-nocheck\nimport React, { useEffect, useState, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport baseUrl from \"../utils/baseUrl\";\nimport { parseCookies } from \"nookies\";\nimport { Grid } from \"semantic-ui-react\";\nimport { NoProfilePosts, NoProfile } from \"../components/Layout/NoData\";\nimport CardPost from \"../components/Post/CardPost\";\nimport cookie from \"js-cookie\";\nimport { PlaceHolderPosts } from \"../components/Layout/PlaceHolderGroup\";\nimport ProfileMenuTabs from \"../components/Profile/ProfileMenuTabs\";\nimport ProfileHeader from \"../components/Profile/ProfileHeader\";\nimport Followers from \"../components/Profile/Followers\";\nimport Following from \"../components/Profile/Following\";\nimport UpdateProfile from \"../components/Profile/UpdateProfile\";\nimport Settings from \"../components/Profile/Settings\";\nimport { PostDeleteToastr } from \"../components/Layout/Toastr\";\n\nfunction ProfilePage({\n  errorLoading,\n  profile,\n  followersLength,\n  followingLength,\n  user,\n  userFollowStats\n}) {\n  const router = useRouter();\n\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [showToastr, setShowToastr] = useState(false);\n\n  const [activeItem, setActiveItem] = useState(\"profile\");\n  const handleItemClick = clickedTab => setActiveItem(clickedTab);\n\n  const [loggedUserFollowStats, setUserFollowStats] = useState(userFollowStats);\n\n  const ownAccount = profile.user._id === user._id;\n\n  if (errorLoading) return <NoProfile />;\n\n  useEffect(() => {\n    const getPosts = async () => {\n      setLoading(true);\n\n      try {\n        const { username } = router.query;\n        const res = await axios.get(`${baseUrl}/api/profile/posts/${username}`, {\n          headers: { Authorization: cookie.get(\"token\") }\n        });\n\n        setPosts(res.data);\n      } catch (error) {\n        alert(\"Error Loading Posts\");\n      }\n\n      setLoading(false);\n    };\n    getPosts();\n  }, [router.query.username]);\n\n  useEffect(() => {\n    showToastr && setTimeout(() => setShowToastr(false), 4000);\n  }, [showToastr]);\n\n  const socket = useRef();\n\n  useEffect(() => {\n    if (!socket.current) {\n      socket.current = io(baseUrl);\n    }\n\n    if (socket.current) {\n      socket.current.emit(\"join\", { userId: user._id });\n    }\n\n    return () => {\n      if (socket.current) {\n        socket.current.emit(\"disconnect\");\n        socket.current.off();\n      }\n    };\n  }, []);\n\n  return (\n    <>\n      {showToastr && <PostDeleteToastr />}\n\n      <Grid stackable>\n        <Grid.Row>\n          <Grid.Column>\n            <ProfileMenuTabs\n              activeItem={activeItem}\n              handleItemClick={handleItemClick}\n              followersLength={followersLength}\n              followingLength={followingLength}\n              ownAccount={ownAccount}\n              loggedUserFollowStats={loggedUserFollowStats}\n            />\n          </Grid.Column>\n        </Grid.Row>\n\n        <Grid.Row>\n          <Grid.Column>\n            {activeItem === \"profile\" && (\n              <>\n                <ProfileHeader\n                  profile={profile}\n                  ownAccount={ownAccount}\n                  loggedUserFollowStats={loggedUserFollowStats}\n                  setUserFollowStats={setUserFollowStats}\n                />\n\n                {loading ? (\n                  <PlaceHolderPosts />\n                ) : posts.length > 0 ? (\n                  posts.map(post => (\n                    <CardPost\n                      socket={socket}\n                      key={post._id}\n                      post={post}\n                      user={user}\n                      setPosts={setPosts}\n                      setShowToastr={setShowToastr}\n                    />\n                  ))\n                ) : (\n                  <NoProfilePosts />\n                )}\n              </>\n            )}\n\n            {activeItem === \"followers\" && (\n              <Followers\n                user={user}\n                loggedUserFollowStats={loggedUserFollowStats}\n                setUserFollowStats={setUserFollowStats}\n                profileUserId={profile.user._id}\n              />\n            )}\n\n            {activeItem === \"following\" && (\n              <Following\n                user={user}\n                loggedUserFollowStats={loggedUserFollowStats}\n                setUserFollowStats={setUserFollowStats}\n                profileUserId={profile.user._id}\n              />\n            )}\n\n            {activeItem === \"updateProfile\" && <UpdateProfile Profile={profile} />}\n\n            {activeItem === \"settings\" && (\n              <Settings newMessagePopup={user.newMessagePopup} />\n            )}\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </>\n  );\n}\n\nProfilePage.getInitialProps = async ctx => {\n  try {\n    const { username } = ctx.query;\n    const { token } = parseCookies(ctx);\n\n    const res = await axios.get(`${baseUrl}/api/profile/${username}`, {\n      headers: { Authorization: token }\n    });\n\n    const { profile, followersLength, followingLength } = res.data;\n\n    return { profile, followersLength, followingLength };\n  } catch (error) {\n    return { errorLoading: true };\n  }\n};\n\nexport default ProfilePage;\n"]},"metadata":{},"sourceType":"module"}