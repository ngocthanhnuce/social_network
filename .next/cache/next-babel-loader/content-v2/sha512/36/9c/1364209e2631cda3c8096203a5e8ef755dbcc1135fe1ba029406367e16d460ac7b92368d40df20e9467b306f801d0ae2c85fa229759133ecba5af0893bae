{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Admin/Documents/social/social_network/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Admin/Documents/social/social_network/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Users/Admin/Documents/social/social_network/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\social\\\\social_network\\\\components\\\\Profile\\\\Settings.js\",\n    _s = $RefreshSig$(),\n    _this = this,\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { List, Divider, Message, Checkbox, Form, Button } from \"semantic-ui-react\";\nimport { passwordUpdate, toggleMessagePopup } from \"../../utils/profileActions\";\n\nfunction Settings(_ref) {\n  _s();\n\n  var newMessagePopup = _ref.newMessagePopup;\n\n  var _useState = useState(false),\n      passwordFields = _useState[0],\n      showPasswordFields = _useState[1];\n\n  var _useState2 = useState(false),\n      newMessageSettings = _useState2[0],\n      showNewMessageSettings = _useState2[1];\n\n  var isFirstRun = useRef(true);\n\n  var _useState3 = useState(newMessagePopup),\n      popupSetting = _useState3[0],\n      setPopupSetting = _useState3[1];\n\n  var _useState4 = useState(false),\n      success = _useState4[0],\n      setSuccess = _useState4[1];\n\n  useEffect(function () {\n    success && setTimeout(function () {\n      return setSuccess(false);\n    }, 3000);\n  }, [success]);\n  useEffect(function () {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n  }, [popupSetting]);\n  return __jsx(React.Fragment, null, success && __jsx(React.Fragment, null, __jsx(Message, {\n    success: true,\n    icon: \"check circle\",\n    header: \"Updated Successfully\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), __jsx(Divider, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })), __jsx(List, {\n    size: \"large\",\n    animated: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(List.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, __jsx(List.Icon, {\n    name: \"user secret\",\n    size: \"large\",\n    verticalAlign: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), __jsx(List.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, __jsx(List.Header, {\n    onClick: function onClick() {\n      return showPasswordFields(!passwordFields);\n    },\n    as: \"a\",\n    content: \"\\u0110\\u1ED5i m\\u1EADt kh\\u1EA9u\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  })), passwordFields && __jsx(UpdatePassword, {\n    setSuccess: setSuccess,\n    showPasswordFields: showPasswordFields,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  })), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), __jsx(List.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(List.Icon, {\n    name: \"paper plane outline\",\n    size: \"large\",\n    verticalAlign: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), __jsx(List.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, __jsx(List.Header, {\n    onClick: function onClick() {\n      return showNewMessageSettings(!newMessageSettings);\n    },\n    as: \"a\",\n    content: \"C\\xE0i \\u0111\\u1EB7t th\\xF4ng b\\xE1o tin nh\\u1EAFn m\\u1EDBi?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    style: {\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"C\\xE0i \\u0111\\u1EB7t c\\u01B0a s\\u1ED5 c\\xF3 b\\u1EADt l\\xEAn khi c\\xF3 tin nh\\u1EAFn m\\u1EDBi hay kh\\xF4ng.\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), __jsx(Checkbox, {\n    checked: popupSetting,\n    toggle: true,\n    onChange: function onChange() {\n      return toggleMessagePopup(popupSetting, setPopupSetting, setSuccess);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }))), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(Settings, \"+ZBiWsR0JhfDf087Jy+ZC1852vU=\");\n\n_c = Settings;\n\nvar UpdatePassword = function UpdatePassword(_ref2) {\n  _s2();\n\n  var setSuccess = _ref2.setSuccess,\n      showPasswordFields = _ref2.showPasswordFields;\n\n  var _useState5 = useState(false),\n      loading = _useState5[0],\n      setLoading = _useState5[1];\n\n  var _useState6 = useState(null),\n      errorMsg = _useState6[0],\n      setError = _useState6[1];\n\n  var _useState7 = useState({\n    currentPassword: \"\",\n    newPassword: \"\"\n  }),\n      userPasswords = _useState7[0],\n      setUserPasswords = _useState7[1];\n\n  var _useState8 = useState({\n    confirmPassword: \"\"\n  }),\n      confirmPass = _useState8[0],\n      setConfirmPassword = _useState8[1];\n\n  var _useState9 = useState({\n    field1: false,\n    field2: false\n  }),\n      typed = _useState9[0],\n      showTyped = _useState9[1];\n\n  var field1 = typed.field1,\n      field2 = typed.field2;\n  var currentPassword = userPasswords.currentPassword,\n      newPassword = userPasswords.newPassword;\n  var confirmPassword = confirmPass.confirmPassword;\n\n  var handleChange = function handleChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setUserPasswords(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, name, value));\n    });\n  };\n\n  var handleChangeConfirm = function handleChangeConfirm(e) {\n    var _e$target2 = e.target,\n        name = _e$target2.name,\n        value = _e$target2.value;\n    setConfirmPassword(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, name, value));\n    });\n  };\n\n  useEffect(function () {\n    errorMsg && setTimeout(function () {\n      return setError(null);\n    }, 5000);\n  }, [errorMsg]);\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    error: errorMsg !== null,\n    loading: loading,\n    onSubmit: /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                setLoading(true);\n                _context.next = 4;\n                return passwordUpdate(setSuccess, userPasswords);\n\n              case 4:\n                setLoading(false);\n                showPasswordFields(false);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, __jsx(List.List, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, __jsx(List.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Input, {\n    fluid: true,\n    icon: {\n      name: \"eye\",\n      circular: true,\n      link: true,\n      onClick: function onClick() {\n        return showTyped(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            field1: !field1\n          });\n        });\n      }\n    },\n    type: field1 ? \"text\" : \"password\",\n    iconPosition: \"left\",\n    label: \"M\\u1EADt kh\\u1EA9u hi\\u1EC7n t\\u1EA1i\",\n    placeholder: \"Current password\",\n    name: \"currentPassword\",\n    onChange: handleChange,\n    value: currentPassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }), __jsx(Form.Input, {\n    fluid: true,\n    icon: {\n      name: \"eye\",\n      circular: true,\n      link: true,\n      onClick: function onClick() {\n        return showTyped(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            field2: !field2\n          });\n        });\n      }\n    },\n    type: field2 ? \"text\" : \"password\",\n    iconPosition: \"left\",\n    label: \"M\\u1EADt kh\\u1EA9u m\\u1EDBi\",\n    placeholder: \"New password\",\n    name: \"newPassword\",\n    onChange: handleChange,\n    value: newPassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }), __jsx(Form.Input, {\n    fluid: true,\n    icon: {\n      name: \"eye\",\n      circular: true,\n      link: true,\n      onClick: function onClick() {\n        return showTyped(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            field2: !field2\n          });\n        });\n      }\n    },\n    type: field2 ? \"text\" : \"password\",\n    iconPosition: \"left\",\n    label: \"Nh\\u1EADp l\\u1EA1i m\\u1EADt kh\\u1EA9u\",\n    placeholder: \"Confirm password\",\n    name: \"confirmPassword\",\n    onChange: handleChangeConfirm,\n    value: confirmPassword,\n    error: confirmPassword === newPassword ? false : {\n      content: \"Mật khẩu không trùng nhau\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    disabled: loading || currentPassword === \"\" || newPassword === \"\",\n    compact: true,\n    icon: \"configure\",\n    type: \"submit\",\n    color: \"teal\",\n    content: \"L\\u01B0u thay \\u0111\\u1ED5i\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    disabled: loading,\n    compact: true,\n    icon: \"cancel\",\n    type: \"button\",\n    content: \"H\\u1EE7y\",\n    onClick: function onClick() {\n      return showPasswordFields(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }), __jsx(Message, {\n    icon: \"meh\",\n    error: true,\n    header: \"Oops!\",\n    content: errorMsg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  })))), __jsx(Divider, {\n    hidden: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s2(UpdatePassword, \"zMzut3QxkyDPECWvki/MGv1nXwg=\");\n\n_c2 = UpdatePassword;\nexport default Settings;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Settings\");\n$RefreshReg$(_c2, \"UpdatePassword\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/social/social_network/components/Profile/Settings.js"],"names":["React","useState","useEffect","useRef","List","Divider","Message","Checkbox","Form","Button","passwordUpdate","toggleMessagePopup","Settings","newMessagePopup","passwordFields","showPasswordFields","newMessageSettings","showNewMessageSettings","isFirstRun","popupSetting","setPopupSetting","success","setSuccess","setTimeout","current","marginTop","UpdatePassword","loading","setLoading","errorMsg","setError","currentPassword","newPassword","userPasswords","setUserPasswords","confirmPassword","confirmPass","setConfirmPassword","field1","field2","typed","showTyped","handleChange","e","target","name","value","prev","handleChangeConfirm","preventDefault","circular","link","onClick","content"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  List,\n  Divider,\n  Message,\n  Checkbox,\n  Form,\n  Button,\n} from \"semantic-ui-react\";\nimport { passwordUpdate, toggleMessagePopup } from \"../../utils/profileActions\";\n\nfunction Settings({ newMessagePopup }) {\n  const [passwordFields, showPasswordFields] = useState(false);\n\n  const [newMessageSettings, showNewMessageSettings] = useState(false);\n\n  const isFirstRun = useRef(true);\n  const [popupSetting, setPopupSetting] = useState(newMessagePopup);\n\n  const [success, setSuccess] = useState(false);\n\n  useEffect(() => {\n    success && setTimeout(() => setSuccess(false), 3000);\n  }, [success]);\n\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n  }, [popupSetting]);\n\n  return (\n    <>\n      {success && (\n        <>\n          <Message success icon=\"check circle\" header=\"Updated Successfully\" />\n          <Divider hidden />\n        </>\n      )}\n\n      <List size=\"large\" animated>\n        <List.Item>\n          <List.Icon name=\"user secret\" size=\"large\" verticalAlign=\"middle\" />\n          <List.Content>\n            <List.Header\n              onClick={() => showPasswordFields(!passwordFields)}\n              as=\"a\"\n              content=\"Đổi mật khẩu\"\n            />\n          </List.Content>\n\n          {passwordFields && (\n            <UpdatePassword\n              setSuccess={setSuccess}\n              showPasswordFields={showPasswordFields}\n            />\n          )}\n        </List.Item>\n        <Divider />\n\n        <List.Item>\n          <List.Icon\n            name=\"paper plane outline\"\n            size=\"large\"\n            verticalAlign=\"middle\"\n          />\n\n          <List.Content>\n            <List.Header\n              onClick={() => showNewMessageSettings(!newMessageSettings)}\n              as=\"a\"\n              content=\"Cài đặt thông báo tin nhắn mới?\"\n            />\n          </List.Content>\n\n          <div style={{ marginTop: \"10px\" }}>\n            Cài đặt cưa sổ có bật lên khi có tin nhắn mới hay không.\n            <br />\n            <br />\n            <Checkbox\n              checked={popupSetting}\n              toggle\n              onChange={() =>\n                toggleMessagePopup(popupSetting, setPopupSetting, setSuccess)\n              }\n            />\n          </div>\n        </List.Item>\n\n        <Divider />\n      </List>\n    </>\n  );\n}\n\nconst UpdatePassword = ({ setSuccess, showPasswordFields }) => {\n  const [loading, setLoading] = useState(false);\n  const [errorMsg, setError] = useState(null);\n\n  const [userPasswords, setUserPasswords] = useState({\n    currentPassword: \"\",\n    newPassword: \"\",\n  });\n  const [confirmPass, setConfirmPassword] = useState({ confirmPassword: \"\" });\n  const [typed, showTyped] = useState({\n    field1: false,\n    field2: false,\n  });\n\n  const { field1, field2 } = typed;\n\n  const { currentPassword, newPassword } = userPasswords;\n  const { confirmPassword } = confirmPass;\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUserPasswords((prev) => ({ ...prev, [name]: value }));\n  };\n  const handleChangeConfirm = (e) => {\n    const { name, value } = e.target;\n    setConfirmPassword((prev) => ({ ...prev, [name]: value }));\n  };\n\n  useEffect(() => {\n    errorMsg && setTimeout(() => setError(null), 5000);\n  }, [errorMsg]);\n\n  return (\n    <>\n      <Form\n        error={errorMsg !== null}\n        loading={loading}\n        onSubmit={async (e) => {\n          e.preventDefault();\n          setLoading(true);\n\n          await passwordUpdate(setSuccess, userPasswords);\n          setLoading(false);\n\n          showPasswordFields(false);\n        }}\n      >\n        <List.List>\n          <List.Item>\n            <Form.Input\n              fluid\n              icon={{\n                name: \"eye\",\n                circular: true,\n                link: true,\n                onClick: () =>\n                  showTyped((prev) => ({ ...prev, field1: !field1 })),\n              }}\n              type={field1 ? \"text\" : \"password\"}\n              iconPosition=\"left\"\n              label=\"Mật khẩu hiện tại\"\n              placeholder=\"Current password\"\n              name=\"currentPassword\"\n              onChange={handleChange}\n              value={currentPassword}\n            />\n            <Form.Input\n              fluid\n              icon={{\n                name: \"eye\",\n                circular: true,\n                link: true,\n                onClick: () =>\n                  showTyped((prev) => ({ ...prev, field2: !field2 })),\n              }}\n              type={field2 ? \"text\" : \"password\"}\n              iconPosition=\"left\"\n              label=\"Mật khẩu mới\"\n              placeholder=\"New password\"\n              name=\"newPassword\"\n              onChange={handleChange}\n              value={newPassword}\n            />\n            <Form.Input\n              fluid\n              icon={{\n                name: \"eye\",\n                circular: true,\n                link: true,\n                onClick: () =>\n                  showTyped((prev) => ({ ...prev, field2: !field2 })),\n              }}\n              type={field2 ? \"text\" : \"password\"}\n              iconPosition=\"left\"\n              label=\"Nhập lại mật khẩu\"\n              placeholder=\"Confirm password\"\n              name=\"confirmPassword\"\n              onChange={handleChangeConfirm}\n              value={confirmPassword}\n              error={confirmPassword === newPassword ? false : { content: \"Mật khẩu không trùng nhau\" }}\n            />\n            <Button\n              disabled={loading || currentPassword === \"\" || newPassword === \"\"}\n              compact\n              icon=\"configure\"\n              type=\"submit\"\n              color=\"teal\"\n              content=\"Lưu thay đổi\"\n            />\n            <Button\n              disabled={loading}\n              compact\n              icon=\"cancel\"\n              type=\"button\"\n              content=\"Hủy\"\n              onClick={() => showPasswordFields(false)}\n            />\n            <Message icon=\"meh\" error header=\"Oops!\" content={errorMsg} />\n          </List.Item>\n        </List.List>\n      </Form>\n      <Divider hidden />\n    </>\n  );\n};\n\nexport default Settings;\n"]},"metadata":{},"sourceType":"module"}